{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/config.js","src/js/lib/pubsub.js","src/js/main.js","src/js/models/Card.js","src/js/models/CardManager.js","src/js/prototypes.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtfile":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  SAVE_CARDS: 'SAVE_CARDS'\n}","\nvar subs = {};\n\n\nfunction pub(name, params) {\n  subs[name].forEach(function(elem) {\n    elem.callback.apply(elem.context, params);\n  });\n}\n\nfunction sub(name, callback, context) {\n  if (subs[name] === undefined) {\n    subs[name] = [];\n  }\n\n  subs[name].push({\n    callback: callback,\n    context: context\n  });\n}\n\n\nmodule.exports = {\n  pub: pub,\n  sub: sub\n}","window.CONFIG = require('./config.js')\n\nvar prototypes  = require('./prototypes'),\n    Card        = require('./models/Card'),\n    CardManager = require('./models/CardManager');\n\n\nvar cardManager = CardManager.getInstance();\n\nObject.assign(window, require('./prototypes'));\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  \"strict mode\";\n\n  var mainContainer = $(\"#mainContainer\"),\n      input         = document.querySelector(\"#formContainer input\"),\n      editContainer = document.getElementById('editContainer'),\n      editInput     = editContainer.getElementsByClassName('input')[0];\n\n  input.addEventListener('keyup', function (event) {\n    event.stopPropagation();\n    var card,\n        TABKEY = 9;\n\n    if (event.keyCode === 13) {\n      card = cardManager.addCard(new Card(input.value));\n      card.render();\n      this.value = \"\";\n      cardManager.saveCards();\n    }\n  });\n\n  window.addEventListener('keydown', keyHandler, false);\n\n  function keyHandler(e) {\n    var TABKEY = 9;\n    if(e.keyCode === TABKEY) {\n      if (event.shiftKey) {\n        console.log(\"MoveToPreviousCard\");\n      } else {\n        console.log(\"MoveToNextCard\");\n      }\n      if(e.preventDefault) {\n        e.preventDefault();\n      }\n      return false;\n    }\n  }\n\n  editInput.addEventListener('keyup', function (event) {\n    event.stopPropagation();\n    var card;\n    if (event.keyCode === 13) {\n      card = cardManager.cards[editContainer.cardId];\n      card.name = editInput.value;\n      card.derender();\n      card.render();\n      this.value = \"\";\n      cardManager.saveCards();\n\n      editContainer.style.display = 'none';\n    }\n  });\n\n  /*\n   On double click edit the card\n   */\n  mainContainer.on(\"dblclick\", \"div\", function () {\n    var elem = this.querySelector('.cardText'),\n        cardId,\n        card;\n\n    if (this.id === \"\") {\n      cardId = parseInt(this.parentElement.id.split(\"_\")[1]);\n    } else {\n      cardId = parseInt(this.id.split(\"_\")[1]);\n    }\n\n    card = cardManager.cards[cardId];\n\n    editInput.value = card.name;\n    editContainer.cardId = cardId;\n    editContainer.style.display = 'block';\n    editInput.focus();\n  });\n\n  /*\n   On click perform the card\n   */\n  mainContainer.on(\"click\", \"div\", function (event) {\n    var elem   = this.querySelector('.cardText'),\n        cardId = parseInt(this.id.split(\"_\")[1]),\n        card   = cardManager.cards[cardId];\n\n    if (event.ctrlKey) {\n    }\n    if (event.altKey) {\n      this.querySelector('.copy').click();\n    }\n    if (event.shiftKey) {\n\n    }\n  });\n\n  mainContainer.on(\"click\", \"div > div\", function () {\n    var option = $(this).html(),\n        selection,\n        cardId = getParentCardId(this);\n\n    switch (option) {\n      case '+':\n        changeDepth.apply(this, [cardId, 1]);\n        break;\n      case '-':\n        changeDepth.apply(this, [cardId, -1]);\n        break;\n      case 'C':\n        selection = selectText(this.parentElement.getElementsByClassName('cardText')[0]);\n        copySelectionText();\n        selection.empty();\n        break;\n      case 'x':\n        cardManager.removeCard(cardId, -1);\n        break;\n    }\n    cardManager.saveCards();\n  });\n\n  cardManager.loadCards();\n  cardManager.renderAllCards();\n  input.focus();\n});","var pubsub = require('../lib/pubsub');\n\nfunction Card(name) {\n  this.id = -1;\n  this.name = name;\n  this.depth = 5;\n  this.x = 100;\n  this.y = 100;\n  this.color = '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\n\nCard.prototype.render = function () {\n  var node = document.createElement('div'),\n      text = document.createElement('div'),\n      that = this;\n\n  text.innerHTML = this.name;\n  text.className = \"cardText\";\n\n  node.id = \"todo_\" + this.id;\n  node.className = \"card card-1\";\n  node.style.position = \"fixed\";\n  node.style.left = this.x;\n  node.style.top = this.y;\n  node.style.cursor = \"-webkit-grab\";\n  node.style.zIndex = this.depth;\n\n  document.getElementById(\"mainContainer\").appendChild(node);\n\n  node.appendChild(createDiv('x', \"control remove\"));\n  node.appendChild(createDiv('+', \"control up\"));\n  node.appendChild(createDiv('-', \"control down\"));\n  node.appendChild(createDiv('C', \"control copy\"));\n  node.appendChild(createDiv(this.depth, \"depth\"));\n\n  node.appendChild(text);\n\n  $(\"#todo_\" + this.id).draggable({\n    stop: function () {\n      var card = $(\"#todo_\" + that.id);\n      that.x = card.css(\"left\");\n      that.y = card.css(\"top\");\n\n      // cardManager.saveCards();\n      pubsub.pub(window.CONFIG.SAVE_CARDS);\n    }\n  });\n};\n\nCard.prototype.derender = function () {\n  var node = document.getElementById(\"todo_\" + this.id);\n  document.getElementById(\"mainContainer\").removeChild(node);\n};\n\nmodule.exports = Card;","var Card = require('./Card'),\n  pubsub = require('../lib/pubsub');\n\n\nfunction CardManager() {\n  this.cards = [];\n}\n\nCardManager.prototype.addCard = function (card) {\n  this.cards.push(card);\n  card.id = this.cards.length - 1;\n\n  return card;\n};\n\nCardManager.prototype.removeCard = function (id) {\n  this.cards[id].derender();\n  this.cards[id] = undefined;\n};\n\nCardManager.prototype.redrawCard = function (cardId, x, y) {\n  var card = this.cards[cardId];\n  card.x = x;\n  card.y = y;\n\n  card.derender();\n  card.render();\n};\n\nCardManager.prototype.saveCards = function () {\n  if (typeof(Storage) !== \"undefined\") {\n    localStorage.setItem(\"cards\", JSON.stringify(this.cards));\n  } else {\n    console.log(\"you don't have local storage :(\");\n  }\n};\n\nCardManager.prototype.loadCards = function () {\n  var i;\n\n  this.cards = JSON.parse(localStorage.getItem(\"cards\"));\n  if (this.cards === null) this.cards = [];\n\n  this.clearArray();\n};\n\nCardManager.prototype.clearArray = function () {\n  var i;\n\n  this.cards = this.cards.filter(function (elem) {\n    return elem !== undefined && elem !== null\n  });\n  for (i in this.cards) {\n    if (this.cards.hasOwnProperty(i)) {\n      this.cards[i].id = i;\n    }\n  }\n};\n\nCardManager.prototype.renderAllCards = function () {\n  this.cards.forEach(function (card) {\n    // card.__proto__ = Card.prototype;\n    Object.setPrototypeOf(card, Card.prototype);\n    card.render();\n  })\n};\n\nCardManager.getInstance = function() {\n  if (CardManager.instance === undefined) {\n    CardManager.instance = new CardManager();\n    pubsub.sub(window.CONFIG.SAVE_CARDS, CardManager.instance.saveCards, CardManager.instance);\n  }\n\n  return CardManager.instance;\n}\n\nmodule.exports = CardManager;","var cardManager = require('./models/CardManager').getInstance();\n\nfunction createDiv(text, className) {\n  var div = document.createElement('div');\n  div.innerHTML = text;\n  div.style.float = \"right\";\n  div.style.cursor = \"pointer\";\n  div.style.width = \"16px\";\n  div.style.textAlign = \"center\";\n\n  if (className !== undefined) {\n    div.className = className;\n  }\n\n  return div;\n}\n\nfunction copySelectionText() {\n  var copysuccess; // var to check whether execCommand successfully executed\n  try {\n    copysuccess = document.execCommand(\"copy\"); // run command to copy selected text to clipboard\n  } catch (e) {\n    copysuccess = false\n  }\n  return copysuccess\n}\n\nfunction selectText(element) {\n  var doc = document\n    , text = element\n    , range, selection\n    ;\n  if (doc.body.createTextRange) {\n    range = document.body.createTextRange();\n    range.moveToElementText(text);\n    range.select();\n  } else if (window.getSelection) {\n    selection = window.getSelection();\n    range = document.createRange();\n    range.selectNodeContents(text);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    return selection;\n  }\n}\n\nfunction getParentCardId(context) {\n  if (context.parentElement === null) return;\n  return parseInt(context.parentElement.id.split(\"_\")[1]);\n}\n\nfunction changeDepth(cardId, increment) {\n  var depth = parseInt(this.parentElement.style.zIndex) + increment;\n\n  this.parentElement.style.zIndex = depth;\n  cardManager.cards[cardId].depth = depth;\n  this.parentElement.getElementsByClassName(\"depth\")[0].innerHTML = depth;\n}\n\n// PROTOTYPES\n\n/*\n * Returns the size of an array\n */\nArray.prototype.size = function () {\n  return this.filter(function (a) {\n    return a !== undefined;\n  }).length\n};\n\n/*\n * Returns the size of an object\n */\nObject.size = function (obj) {\n  var size = 0, key = \"\";\n\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) size++;\n  }\n  return size;\n};\n\nmodule.exports = {\n  createDiv: createDiv,\n  copySelectionText: copySelectionText,\n  selectText: selectText,\n  getParentCardId: getParentCardId,\n  changeDepth: changeDepth\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}