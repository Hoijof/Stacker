{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/murmurhash-js/index.js","node_modules/murmurhash-js/murmurhash2_gc.js","node_modules/murmurhash-js/murmurhash3_gc.js","node_modules/random-material-color/dist/randomColor.js","src/js/config.js","src/js/lib/keyHandler.js","src/js/lib/pubsub.js","src/js/main.js","src/js/models/Card.js","src/js/models/CardManager.js","src/js/prototypes.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrjSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvpjfile":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var murmur3 = require(\"./murmurhash3_gc.js\")\nvar murmur2 = require(\"./murmurhash2_gc.js\")\n\nmodule.exports = murmur3\nmodule.exports.murmur3 = murmur3\nmodule.exports.murmur2 = murmur2\n","/**\n * JS Implementation of MurmurHash2\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n */\n\nfunction murmurhash2_32_gc(str, seed) {\n  var\n    l = str.length,\n    h = seed ^ l,\n    i = 0,\n    k;\n  \n  while (l >= 4) {\n  \tk = \n  \t  ((str.charCodeAt(i) & 0xff)) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 8) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 16) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 24);\n    \n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    k ^= k >>> 24;\n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n\th = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n    l -= 4;\n    ++i;\n  }\n  \n  switch (l) {\n  case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n  case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n  case 1: h ^= (str.charCodeAt(i) & 0xff);\n          h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  }\n\n  h ^= h >>> 13;\n  h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  h ^= h >>> 15;\n\n  return h >>> 0;\n}\n\nif(typeof module !== undefined) {\n  module.exports = murmurhash2_32_gc\n}\n","/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash \n */\n\nfunction murmurhash3_32_gc(key, seed) {\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\t\n\tremainder = key.length & 3; // key.length % 4\n\tbytes = key.length - remainder;\n\th1 = seed;\n\tc1 = 0xcc9e2d51;\n\tc2 = 0x1b873593;\n\ti = 0;\n\t\n\twhile (i < bytes) {\n\t  \tk1 = \n\t  \t  ((key.charCodeAt(i) & 0xff)) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\t\t\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\t\n\tk1 = 0;\n\t\n\tswitch (remainder) {\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\t\t\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\t\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nif(typeof module !== \"undefined\") {\n  module.exports = murmurhash3_32_gc\n}","var defaultPalette={50:[\"#FFEBEE\",\"#FCE4EC\",\"#F3E5F5\",\"#EDE7F6\",\"#E8EAF6\",\"#E3F2FD\",\"#E1F5FE\",\"#E0F7FA\",\"#E0F2F1\",\"#E8F5E9\",\"#F1F8E9\",\"#F9FBE7\",\"#FFFDE7\",\"#FFF8E1\",\"#FFF3E0\",\"#FBE9E7\",\"#EFEBE9\",\"#FAFAFA\",\"#ECEFF1\"],100:[\"#FFCDD2\",\"#F8BBD0\",\"#E1BEE7\",\"#D1C4E9\",\"#C5CAE9\",\"#BBDEFB\",\"#B3E5FC\",\"#B2EBF2\",\"#B2DFDB\",\"#C8E6C9\",\"#DCEDC8\",\"#F0F4C3\",\"#FFF9C4\",\"#FFECB3\",\"#FFE0B2\",\"#FFCCBC\",\"#D7CCC8\",\"#F5F5F5\",\"#CFD8DC\"],200:[\"#EF9A9A\",\"#F48FB1\",\"#CE93D8\",\"#B39DDB\",\"#9FA8DA\",\"#90CAF9\",\"#81D4FA\",\"#80DEEA\",\"#80CBC4\",\"#A5D6A7\",\"#C5E1A5\",\"#E6EE9C\",\"#FFF59D\",\"#FFE082\",\"#FFCC80\",\"#FFAB91\",\"#BCAAA4\",\"#EEEEEE\",\"#B0BEC5\"],300:[\"#E57373\",\"#F06292\",\"#BA68C8\",\"#9575CD\",\"#7986CB\",\"#64B5F6\",\"#4FC3F7\",\"#4DD0E1\",\"#4DB6AC\",\"#81C784\",\"#AED581\",\"#DCE775\",\"#FFF176\",\"#FFD54F\",\"#FFB74D\",\"#FF8A65\",\"#A1887F\",\"#E0E0E0\",\"#90A4AE\"],400:[\"#EF5350\",\"#EC407A\",\"#AB47BC\",\"#7E57C2\",\"#5C6BC0\",\"#42A5F5\",\"#29B6F6\",\"#26C6DA\",\"#26A69A\",\"#66BB6A\",\"#9CCC65\",\"#D4E157\",\"#FFEE58\",\"#FFCA28\",\"#FFA726\",\"#FF7043\",\"#8D6E63\",\"#BDBDBD\",\"#78909C\"],500:[\"#F44336\",\"#E91E63\",\"#9C27B0\",\"#673AB7\",\"#3F51B5\",\"#2196F3\",\"#03A9F4\",\"#00BCD4\",\"#009688\",\"#4CAF50\",\"#8BC34A\",\"#CDDC39\",\"#FFEB3B\",\"#FFC107\",\"#FF9800\",\"#FF5722\",\"#795548\",\"#9E9E9E\",\"#607D8B\"],600:[\"#E53935\",\"#D81B60\",\"#8E24AA\",\"#5E35B1\",\"#3949AB\",\"#1E88E5\",\"#039BE5\",\"#00ACC1\",\"#00897B\",\"#43A047\",\"#7CB342\",\"#C0CA33\",\"#FDD835\",\"#FFB300\",\"#FB8C00\",\"#F4511E\",\"#6D4C41\",\"#757575\",\"#546E7A\"],700:[\"#D32F2F\",\"#C2185B\",\"#7B1FA2\",\"#512DA8\",\"#303F9F\",\"#1976D2\",\"#0288D1\",\"#0097A7\",\"#00796B\",\"#388E3C\",\"#689F38\",\"#AFB42B\",\"#FBC02D\",\"#FFA000\",\"#F57C00\",\"#E64A19\",\"#5D4037\",\"#616161\",\"#455A64\"],800:[\"#C62828\",\"#AD1457\",\"#6A1B9A\",\"#4527A0\",\"#283593\",\"#1565C0\",\"#0277BD\",\"#00838F\",\"#00695C\",\"#2E7D32\",\"#558B2F\",\"#9E9D24\",\"#F9A825\",\"#FF8F00\",\"#EF6C00\",\"#D84315\",\"#4E342E\",\"#424242\",\"#37474F\"],900:[\"#B71C1C\",\"#880E4F\",\"#4A148C\",\"#311B92\",\"#1A237E\",\"#0D47A1\",\"#01579B\",\"#006064\",\"#004D40\",\"#1B5E20\",\"#33691E\",\"#827717\",\"#F57F17\",\"#FF6F00\",\"#E65100\",\"#BF360C\",\"#3E2723\",\"#212121\",\"#263238\"],A100:[\"#FF8A80\",\"#FF80AB\",\"#EA80FC\",\"#B388FF\",\"#8C9EFF\",\"#82B1FF\",\"#80D8FF\",\"#84FFFF\",\"#A7FFEB\",\"#B9F6CA\",\"#CCFF90\",\"#F4FF81\",\"#FFFF8D\",\"#FFE57F\",\"#FFD180\",\"#FF9E80\"],A200:[\"#FF5252\",\"#FF4081\",\"#E040FB\",\"#7C4DFF\",\"#536DFE\",\"#448AFF\",\"#40C4FF\",\"#18FFFF\",\"#64FFDA\",\"#69F0AE\",\"#B2FF59\",\"#EEFF41\",\"#FFFF00\",\"#FFD740\",\"#FFAB40\",\"#FF6E40\"],A400:[\"#FF1744\",\"#F50057\",\"#D500F9\",\"#651FFF\",\"#3D5AFE\",\"#2979FF\",\"#00B0FF\",\"#00E5FF\",\"#1DE9B6\",\"#00E676\",\"#76FF03\",\"#C6FF00\",\"#FFEA00\",\"#FFC400\",\"#FF9100\",\"#FF3D00\"],A700:[\"#D50000\",\"#C51162\",\"#AA00FF\",\"#6200EA\",\"#304FFE\",\"#2962FF\",\"#0091EA\",\"#00B8D4\",\"#00BFA5\",\"#00C853\",\"#64DD17\",\"#AEEA00\",\"#FFD600\",\"#FFAB00\",\"#FF6D00\",\"#DD2C00\"]},murmur=require(\"murmurhash-js\");module.exports=function(){var F=[],E={shades:[\"500\"],palette:defaultPalette,text:null,ignoreColors:[]},C=function(C){C||(C=E),C.palette||(C.palette=defaultPalette),C.shades||(C.shades=[\"500\"]);for(var B,D=F.length,t=0;D>t;t++)if(C.text&&F[t].text===C.text)return F[t].color;return B=A(C),C.text&&F.push({text:C.text,color:B}),B},A=function(F){var E=F.shades[B(F.shades.length)],C=\"\";for(var A in F.palette)F.palette.hasOwnProperty(A)&&A===E&&(C=F.text?F.palette[A][D(F.text,F.palette[A].length)]:F.palette[A][B(F.palette[A].length)]);return C},B=function(F){return Math.floor(Math.random()*F)},D=function(F,E){var C=murmur.murmur3(F)/1e10;return.1>C&&(C=10*C),Math.floor(C*E)};return{getColor:C}}();","module.exports = {\n  SAVE_CARDS: 'SAVE_CARDS',\n  SELECT_CARD: 'SELECT_CARD',\n  RERENDER: 'RERENDER',\n  ASCII: {\n    ESCAPE_KEY: 27,\n    TAB_KEY: 9,\n    C_KEY: 67,\n    D_KEY: 68,\n    E_KEY: 69,\n    PLUS_KEY: 187,\n    MINUS_KEY: 189,\n    DOT_KEY: 190,\n    A_KEY: 65,\n    I_KEY: 73,\n    R_KEY: 82,\n    Z_KEY: 90,\n    KEYS_ARRAY: [27, 9, 67, 68, 69, 187, 189, 190, 65, 73, 82, 90],\n  },\n  DEFAULT_CONTENT: 'W3siaWQiOiIwIiwibmFtZSI6IlVzZSB0YWIgYW5kIHNoaWZ0IHRhYiB0byBjaXJjbGUgYmV0d2VlbiBjYXJkcyA6RFxuXG5EcmFnZ2luZyBvciBjbGlja2luZyB0aGVtIHdpbGwgYWxzbyBtYXJrIHRoZW0gYXMgc2VsZWN0ZWQiLCJkZXB0aCI6NSwieCI6IjEyM3B4IiwieSI6IjU5cHgiLCJjb2xvciI6IiM0REQwRTEiLCJzZWxlY3RlZCI6dHJ1ZSwibm9kZSI6eyJqUXVlcnkxNzIwODI0MDE1NTE1MTY1MDg3OSI6NH19LHsiaWQiOiIxIiwibmFtZSI6Ik9uIGEgbWFya2VkIGNhcmQgdXNlOlxuJ2MnIHRvIGNvcHkgdGhlIGNvbnRlbnRcbidkJyB0byBkZWxldGUgaXRcbidlJyB0byBlZGl0IGl0XG4nKycgYW5kICctJyB0byBtb2RpZnkgdGhlIGRlcHRoIG9mIHRoZSBjYXJkIGFuZCAnLicgdG8gcmVzZXQgaXRcbidhJyB0byBhcmNoaXZlIG9yIGRlYXJjaGl2ZSBkZSBjYXJkXG4naScgdG8gZm9jdXMgb24gdGhlIGFkZCBuZXcgY2FyZCBpbnB1dCIsImRlcHRoIjo2LCJ4IjoiMzQycHgiLCJ5IjoiNTRweCIsImNvbG9yIjoiIzgwQ0JDNCIsInNlbGVjdGVkIjpmYWxzZSwibm9kZSI6eyJqUXVlcnkxNzIwODI0MDE1NTE1MTY1MDg3OSI6N319LHsiaWQiOiIyIiwibmFtZSI6IldoaWxlIGVkaXRpbmcgdXNlIHNoaWZ0ICsgZW50ZXIgdG8gXG5pbnNlcnRcbmFcbmxpbmVcbmJyZWFrXG46RCIsImRlcHRoIjo1LCJ4IjoiMTIxcHgiLCJ5IjoiMjczcHgiLCJjb2xvciI6IiM2NEI1RjYiLCJzZWxlY3RlZCI6ZmFsc2UsIm5vZGUiOnsialF1ZXJ5MTcyMDgyNDAxNTUxNTE2NTA4NzkiOjZ9fV0=',\n  VERSION: '0.5.0',\n};","const CONFIG = require('../config');\n\nlet cardManager,\n    Card = require('../models/Card');\n\nlet mainContainer,\n    input,\n    editContainer,\n    editInput,\n    importContainer,\n    importInput,\n    exportContainer,\n    exportContent,\n    importButton;\n\n\nfunction init(options) {\n    cardManager = options.cardManager;\n    bindings();\n}\n\nfunction bindings() {\n    mainContainer = $('#mainContainer');\n    input = document.querySelector('#formContainer input');\n    editContainer = document.getElementById('editContainer');\n    editInput = editContainer.getElementsByClassName('textarea')[0];\n    importContainer = document.getElementById('importContainer');\n    importInput = importContainer.getElementsByClassName('input')[0];\n    importButton = importContainer.getElementsByClassName('button')[0];\n    exportContainer = document.getElementById('exportContainer');\n    exportContent = exportContainer.getElementsByTagName('div')[0];\n\n\n    window.addEventListener('keyup', keyHandlerUp, false);\n    window.addEventListener('keydown', keyHandlerDown, false);\n    input.addEventListener('keydown', mainInputKeyEvent);\n    editInput.addEventListener('keydown', editInputKeyEvent);\n    editContainer.addEventListener('click', hideEditContainer);\n    editInput.addEventListener('click', stopPropagation);\n    /*\n     On double click edit the card\n     */\n    mainContainer.on('dblclick', 'div', doubleClickHandler);\n    /*\n     On click perform the card\n     */\n    mainContainer.on('click', 'div', cardClickEvents);\n    mainContainer.on('click', 'div > div', cardMenuEvents);\n    document.getElementById('export').addEventListener('click', exportCards);\n    document.getElementById('import').addEventListener('click', showImporter);\n    importButton.addEventListener('click', loadImportCardsCode);\n    importContainer.addEventListener('click', hideImportContainer);\n    importInput.addEventListener('keydown', importInputKeyEvent);\n    importInput.addEventListener('click', stopPropagation);\n    exportContainer.addEventListener('click', hideExportContainer);\n    exportContent.addEventListener('click', stopPropagation);\n}\n\nfunction keyHandlerDown(e) {\n\n    if (e.keyCode === CONFIG.ASCII.TAB_KEY) {\n        document.activeElement.blur();\n        if (event.shiftKey) {\n            cardManager.previousCard();\n        } else {\n            cardManager.nextCard();\n        }\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n    }\n}\n\nfunction keyHandlerUp(e) {\n    console.log(e.keyCode);\n    if (document.activeElement !== document.body || CONFIG.ASCII.KEYS_ARRAY.indexOf(e.keyCode) === -1) {\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n\n    switch (e.keyCode) {\n        case CONFIG.ASCII.C_KEY:\n            if (event.ctrlKey) {\n                let elem = cardManager.selectedCard.node,\n                    selection;\n\n                selection = selectText(elem.getElementsByClassName('cardText')[0]);\n                copySelectionText();\n                selection.empty();\n            }\n\n            break;\n        case CONFIG.ASCII.D_KEY:\n            if (event.ctrlKey) {\n                let card = cardManager.selectedCard;\n                cardManager.nextCard();\n\n                cardManager.deleteCard(card);\n\n                cardManager.saveCards();\n            }\n            break;\n        case CONFIG.ASCII.E_KEY:\n            if (event.ctrlKey) {\n                doubleClickHandler.apply(cardManager.selectedCard.node);\n            }\n            break;\n        case CONFIG.ASCII.A_KEY:\n            if (event.ctrlKey) {\n                cardManager.selectedCard.toggleArchived();\n            }\n            break;\n        case CONFIG.ASCII.I_KEY:\n            if (event.ctrlKey) {\n                input.focus();\n            }\n            break;\n        case CONFIG.ASCII.PLUS_KEY:\n            changeDepth.apply(cardManager.selectedCard.node, [cardManager.selectedCard.id, 1]);\n            break;\n        case CONFIG.ASCII.MINUS_KEY:\n            changeDepth.apply(cardManager.selectedCard.node, [cardManager.selectedCard.id, -1]);\n            break;\n        case CONFIG.ASCII.DOT_KEY:\n            setDepth.apply(cardManager.selectedCard.node, [cardManager.selectedCard.id, 5]);\n            break;\n        case CONFIG.ASCII.R_KEY:\n            cardManager.selectedCard.color = cardManager.selectedCard.getBackgroundColor();\n            cardManager.selectedCard.derender();\n            cardManager.selectedCard.render();\n            break;\n        case CONFIG.ASCII.Z_KEY:\n            if (event.ctrlKey) {\n                cardManager.undeleteLastCard();\n            }\n            break;\n    }\n}\n\nfunction hideExportContainer() {\n    exportContainer.style.display = 'none';\n}\n\nfunction hideEditContainer() {\n    editContainer.style.display = 'none';\n}\n\nfunction hideImportContainer() {\n    importContainer.style.display = 'none';\n}\n\nfunction stopPropagation(e) {\n    e.stopPropagation();\n}\n\nfunction mainInputKeyEvent(event) {\n    let card;\n\n    if (event.keyCode === 13) {\n        card = cardManager.addCard(Object.create(Card, {}).init(input.value));\n        card.render();\n        this.value = '';\n        cardManager.saveCards();\n        cardManager.selectCard(card.id);\n    }\n}\n\nfunction editInputKeyEvent(event) {\n    event.stopPropagation();\n    let card;\n    if (event.keyCode === 13 && event.shiftKey) return;\n    if (event.keyCode === 13) {\n        card = cardManager.cards[editContainer.cardId];\n        card.name = editInput.value;\n        card.derender();\n        card.render();\n        this.value = '';\n        cardManager.saveCards();\n        hideEditContainer();\n    } else if (event.keyCode === 27) {\n        hideEditContainer();\n    }\n\n}\n\nfunction importInputKeyEvent(event) {\n    if (event.keyCode === 27) {\n        hideImportContainer();\n    }\n}\n\nfunction doubleClickHandler() {\n    let elem = this.querySelector('.cardText'),\n        cardId,\n        card;\n\n    if (this.id === '') {\n        cardId = parseInt(this.parentElement.id.split('_')[1]);\n    } else {\n        cardId = parseInt(this.id.split('_')[1]);\n    }\n\n    card = cardManager.cards[cardId];\n\n    editInput.value = card.name;\n    editContainer.cardId = cardId;\n    editContainer.style.display = 'block';\n    editInput.style.top = card.y;\n    editInput.style.left = card.x;\n    editInput.style['padding-top'] = '23px';\n    editInput.focus();\n}\n\nfunction cardClickEvents(event) {\n    let elem = this.querySelector('.cardText'),\n        cardId,\n        card;\n\n    if (this.id === \"\") {\n        cardId = parseInt(this.parentElement.id.split('_')[1]);\n    } else {\n        cardId = parseInt(this.id.split('_')[1]);\n    }\n\n    card = cardManager.cards[cardId];\n\n    if (card === undefined) return;\n\n    cardManager.selectCard(card.id);\n\n    if (event.ctrlKey) {\n    }\n    if (event.altKey) {\n        this.querySelector('.copy').click();\n    }\n    if (event.shiftKey) {\n\n    }\n}\n\nfunction cardMenuEvents() {\n    let option = $(this).html(),\n        selection,\n        cardId = getParentCardId(this);\n\n    switch (option) {\n        case '+':\n            changeDepth.apply(this, [cardId, 1]);\n            break;\n        case '-':\n            changeDepth.apply(this, [cardId, -1]);\n            break;\n        case 'C':\n            selection = selectText(this.parentElement.getElementsByClassName('cardText')[0]);\n            copySelectionText();\n            selection.empty();\n            break;\n        case 'x':\n            cardManager.deleteCard(cardManager.cards[cardId]);\n            break;\n        case 'V':\n        case 'O':\n            cardManager.cards[cardId].toggleArchived();\n    }\n    cardManager.saveCards();\n}\n\nfunction exportCards() {\n    exportContainer.style.display = 'block';\n    exportContent.innerHTML = cardManager.exportCards();\n    selection = selectText(exportContent);\n    copySelectionText();\n    selection.empty();\n}\n\nfunction loadImportCardsCode() {\n    let data = importInput.value;\n    cardManager.importCards(data);\n    importContainer.style.display = 'none';\n}\n\nfunction showImporter() {\n    importContainer.style.display = 'block';\n    importInput.focus();\n}\n\nmodule.exports = {\n    init: init\n};","\nvar subs = {};\n\n\nfunction pub(name, params) {\n  subs[name].forEach(function(elem) {\n    elem.callback.apply(elem.context, params);\n  });\n}\n\nfunction sub(name, callback, context) {\n  if (subs[name] === undefined) {\n    subs[name] = [];\n  }\n\n  subs[name].push({\n    callback: callback,\n    context: context\n  });\n}\n\n\nmodule.exports = {\n  pub: pub,\n  sub: sub\n};","window.CONFIG = require('./config.js');\n\nlet keyHandler = require('./lib/keyHandler'),\n  cardManager = require('./models/CardManager').getInstance(),\n  pubsub = require('./lib/pubsub');\n\nwindow.cm = {\n  cardManager: cardManager\n};\n\nObject.assign(window, require('./prototypes'));\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  'strict mode';\n\n  keyHandler.init({\n    cardManager: cardManager\n  });\n\n  cardManager.loadCards();\n  cardManager.renderAllCards();\n});\n","let pubsub = require('../lib/pubsub'),\n    randomMC = require('random-material-color');\n\n\nlet Card = {\n    init: function(name) {\n        this.id = -1;\n        this.name = name;\n        this.depth = 5;\n        this.x = 100;\n        this.y = 100;\n        this.color = this.getBackgroundColor();\n        this.selected = false;\n        this.isArchived = false;\n        this.isDeleted = false;\n        this.createdAt = + new Date();\n        this.archivedAt = null;\n\n        return this;\n    },\n    render: function(always = false) {\n        if (this.isDeleted === true && always === false) {\n            return;\n        }\n\n        let node = document.createElement('div'),\n            text = document.createElement('div'),\n            that = this;\n\n        text.innerHTML = this.name.replace(/\\r?\\n/g, '<br/>');\n        text.className = 'cardText';\n\n        node.id = 'todo_' + this.id;\n        node.className = 'card card-1';\n        node.style.position = 'fixed';\n        node.style.left = this.x;\n        node.style.top = this.y;\n        node.style.cursor = '-webkit-grab';\n        node.style.zIndex = this.depth;\n        node.style.backgroundColor = this.color;\n\n        document.getElementById('mainContainer').appendChild(node);\n\n        node.appendChild(createDiv('x', 'control remove'));\n        // node.appendChild(createDiv('+', 'control up'));\n        // node.appendChild(createDiv('-', 'control down'));\n        node.appendChild(createDiv('C', 'control copy'));\n        node.appendChild(createDiv('depth: ' + this.depth, 'depth'));\n        // node.appendChild(createDiv(this.isArchived ? 'V' : 'O', 'isArchived'));\n        node.appendChild(createDiv('id: ' + this.id, 'id'));\n\n        node.appendChild(text);\n\n        $('#todo_' + this.id).draggable({\n            stop: function() {\n                let card = $('#todo_' + that.id);\n\n                that.x = card.css('left');\n                that.y = card.css('top');\n\n                pubsub.pub(window.CONFIG.SELECT_CARD, [that.id]);\n                pubsub.pub(window.CONFIG.SAVE_CARDS);\n            },\n        });\n\n        this.node = node;\n\n\n        if (this.selected === true) {\n            node.classList.add('selected');\n        }\n\n        if (this.isArchived) {\n            node.classList.add('completed');\n        }\n\n        return this;\n    },\n    getBackgroundColor: function() {\n        return randomMC.getColor({shades: ['200', '300']});\n    },\n    derender: function() {\n        let node = document.getElementById('todo_' + this.id);\n        document.getElementById('mainContainer').removeChild(node);\n\n        return this;\n    },\n    toggleArchived: function() {\n        if (this.isArchived === false || this.isArchived === undefined) {\n            this.node.classList.remove('notCompleted');\n            void this.node.offsetWidth;\n            this.node.classList.add('completed');\n            this.archivedAt = + new Date();\n        } else {\n            this.node.classList.remove('completed');\n            void this.node.offsetWidth;\n            this.node.classList.add('notCompleted');\n            this.archivedAt = null;\n        }\n\n        this.isArchived = !this.isArchived;\n\n        pubsub.pub(window.CONFIG.SAVE_CARDS);\n    },\n    delete: function() {\n        this.isDeleted = true;\n\n        this.derender();\n    },\n    undelete: function() {\n        this.isDeleted = false;\n\n        this.render();\n    }\n};\n\nmodule.exports = Card;","const Card = require('./Card'),\n    pubsub = require('../lib/pubsub'),\n    CONFIG = require('../config');\n\nlet CardManager = {\n    init: function() {\n        this.cards = [];\n        this.selectedCard = {id: -1};\n        this.deletedCards = [];\n\n        return this;\n    },\n    addCard: function(card) {\n        this.cards.push(card);\n        card.id = this.cards.length - 1;\n\n        return card;\n    },\n    removeCard: function(id) {\n        this.cards[id].derender();\n        this.cards[id] = undefined;\n\n        return this;\n    },\n    redrawCard: function(cardId, x, y) {\n        let card = this.cards[cardId];\n        card.x = x;\n        card.y = y;\n\n        card.derender();\n        card.render();\n\n        return this;\n    },\n    saveCards: function() {\n        if (typeof(Storage) !== 'undefined') {\n            localStorage.setItem('cards', JSON.stringify(this.cards));\n        } else {\n            console.log('you don\\'t have local storage :(');\n        }\n\n        this.persistSelectedCard();\n\n        return this;\n    },\n    loadCards: function() {\n        this.cards = JSON.parse(localStorage.getItem('cards'));\n        if (this.cards === null) {\n            this.cards = JSON.parse(atob(CONFIG.DEFAULT_CONTENT));\n        }\n\n        this.clearArray();\n\n        this.loadSelectedCard();\n\n        document.activeElement.blur();\n\n        return this;\n    },\n    clearArray: function() {\n        let i;\n\n        this.cards = this.cards.filter(function(elem) {\n            return elem !== undefined && elem !== null;\n        });\n        for (i in this.cards) {\n            if (this.cards.hasOwnProperty(i)) {\n                this.cards[i].id = i;\n            }\n        }\n\n        return this;\n    },\n    reRenderAllCards: function() {\n        this.cards.forEach((card) => {\n            card.derender();\n        });\n        this.renderAllCards();\n    },\n    renderAllCards: function() {\n\n        this.cards.forEach((card) => {\n                card.selected = this.selectedCard && (this.selectedCard.id === card.id);\n                Object.setPrototypeOf(card, Card);\n                card.render();\n            }\n        );\n\n        return this;\n    },\n    getInstance: function() {\n        if (CardManager.instance === undefined) {\n            CardManager.instance = Object.create(CardManager, {});\n            CardManager.instance.init();\n            pubsub.sub(window.CONFIG.SAVE_CARDS, CardManager.instance.saveCards, CardManager.instance);\n            pubsub.sub(window.CONFIG.SELECT_CARD, CardManager.instance.selectCard, CardManager.instance);\n            pubsub.sub(window.CONFIG.RERENDER, CardManager.instance.reRenderAllCards, CardManager.instance);\n        }\n\n        return CardManager.instance;\n\n    },\n    exportCards: function() {\n        return btoa(JSON.stringify(this.cards));\n    },\n    importCards: function(data) {\n        localStorage.setItem('cards', atob(data));\n        this.loadCards();\n        this.renderAllCards();\n    },\n    selectCard: function(cardId) {\n        if (this.selectedCard !== undefined) {\n            this.selectedCard.node.classList.remove('selected');\n        }\n        this.selectedCard = this.cards[cardId];\n\n        this.selectedCard.node.classList.add('selected');\n\n        this.persistSelectedCard();\n        document.activeElement.blur();\n    },\n    nextCard: function() {\n        let it = +this.selectedCard.id + 1;\n\n        while (it !== +this.selectedCard.id) {\n            if (this.cards[it] !== undefined && this.cards[it].isDeleted !== true) {\n                break;\n            }\n            if (++it >= this.cards.length) {\n                it = 0;\n            }\n        }\n\n        this.selectCard(it);\n    },\n    previousCard: function() {\n        let it = +this.selectedCard.id - 1;\n\n        while (it !== +this.selectedCard.id) {\n            if (this.cards[it] !== undefined) {\n                break;\n            }\n            if (--it <= 0) {\n                it = this.cards.length;\n            }\n        }\n\n        this.selectCard(it);\n    },\n    persistSelectedCard: function() {\n        if (this.selectedCard && this.selectedCard.id > -1) {\n            localStorage.setItem('selectedCard', this.selectedCard.id);\n        }\n    },\n    loadSelectedCard: function() {\n        let selectedCardId = +localStorage.getItem('selectedCard');\n\n        if (selectedCardId !== undefined && selectedCardId > -1) {\n            this.selectedCard = this.cards[selectedCardId];\n        }\n    },\n    deleteCard: function(card) {\n        this.deletedCards.push(card);\n\n        card.delete();\n    },\n    undeleteLastCard: function() {\n        if (this.deletedCards.length === 0) {\n            return;\n        }\n\n        this.deletedCards.splice(this.deletedCards.length -1)[0].undelete();\n\n        this.saveCards();\n    }\n};\n\nmodule.exports = CardManager;","let cardManager = require('./models/CardManager').getInstance();\n\nfunction createDiv(text, className) {\n    let div = document.createElement('div');\n    div.innerHTML = text;\n    div.style.float = \"right\";\n    div.style.cursor = \"pointer\";\n    div.style.width = \"auto\";\n    div.style.textAlign = \"center\";\n    div.style.margin = \"0 3px\";\n\n    if (className !== undefined) {\n        div.className = className;\n    }\n\n    return div;\n}\n\nfunction copySelectionText() {\n    let copysuccess; // let to check whether execCommand successfully executed\n    try {\n        copysuccess = document.execCommand(\"copy\"); // run command to copy selected text to clipboard\n    } catch (e) {\n        copysuccess = false\n    }\n    return copysuccess\n}\n\nfunction selectText(element) {\n    let doc = document\n        , text = element\n        , range, selection\n    ;\n    if (doc.body.createTextRange) {\n        range = document.body.createTextRange();\n        range.moveToElementText(text);\n        range.select();\n    } else if (window.getSelection) {\n        selection = window.getSelection();\n        range = document.createRange();\n        range.selectNodeContents(text);\n        selection.removeAllRanges();\n        selection.addRange(range);\n        return selection;\n    }\n}\n\nfunction getParentCardId(context) {\n    if (context.parentElement === null) return;\n    return parseInt(context.parentElement.id.split(\"_\")[1]);\n}\n\nfunction getSomethingByclassName(context, classname) {\n    let res = context.getElementsByClassName(classname);\n\n    if (res.length === 0) {\n        res = context.parentElement.getElementsByClassName(classname);\n    }\n\n    return res;\n}\n\nfunction changeDepth(cardId, increment) {\n    let depth = cardManager.cards[cardId].depth + increment;\n\n    this.style.zIndex = depth;\n    cardManager.cards[cardId].depth = depth;\n\n    let elem = getSomethingByclassName(this, 'depth');\n    elem[0].innerHTML = depth;\n}\n\nfunction setDepth(cardId, depth) {\n    this.style.zIndex = depth;\n    cardManager.cards[cardId].depth = depth;\n\n    let elem = getSomethingByclassName(this, 'depth');\n    elem[0].innerHTML = depth;\n}\n\nfunction getCardHTMLById(mainContainer, id) {\n    return mainContainer.getElementById('todo_' + id);\n}\n\n// PROTOTYPES\n\n/*\n * Returns the size of an array\n */\nArray.prototype.size = function() {\n    return this.filter(function(a) {\n        return a !== undefined;\n    }).length\n};\n\n/*\n * Returns the size of an object\n */\nObject.size = function(obj) {\n    let size = 0, key = \"\";\n\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nmodule.exports = {\n    createDiv: createDiv,\n    copySelectionText: copySelectionText,\n    selectText: selectText,\n    getParentCardId: getParentCardId,\n    changeDepth: changeDepth,\n    setDepth: setDepth,\n    getCardHTMLById: getCardHTMLById\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvbXVybXVyaGFzaC1qcy9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9tdXJtdXJoYXNoLWpzL211cm11cmhhc2gyX2djLmpzIiwibm9kZV9tb2R1bGVzL211cm11cmhhc2gtanMvbXVybXVyaGFzaDNfZ2MuanMiLCJub2RlX21vZHVsZXMvcmFuZG9tLW1hdGVyaWFsLWNvbG9yL2Rpc3QvcmFuZG9tQ29sb3IuanMiLCJzcmMvanMvY29uZmlnLmpzIiwic3JjL2pzL2xpYi9rZXlIYW5kbGVyLmpzIiwic3JjL2pzL2xpYi9wdWJzdWIuanMiLCJzcmMvanMvbWFpbi5qcyIsInNyYy9qcy9tb2RlbHMvQ2FyZC5qcyIsInNyYy9qcy9tb2RlbHMvQ2FyZE1hbmFnZXIuanMiLCJzcmMvanMvcHJvdG90eXBlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3REQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25FQTs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3ZCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcEhBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsInZhciBtdXJtdXIzID0gcmVxdWlyZShcIi4vbXVybXVyaGFzaDNfZ2MuanNcIilcbnZhciBtdXJtdXIyID0gcmVxdWlyZShcIi4vbXVybXVyaGFzaDJfZ2MuanNcIilcblxubW9kdWxlLmV4cG9ydHMgPSBtdXJtdXIzXG5tb2R1bGUuZXhwb3J0cy5tdXJtdXIzID0gbXVybXVyM1xubW9kdWxlLmV4cG9ydHMubXVybXVyMiA9IG11cm11cjJcbiIsIi8qKlxuICogSlMgSW1wbGVtZW50YXRpb24gb2YgTXVybXVySGFzaDJcbiAqIFxuICogQGF1dGhvciA8YSBocmVmPVwibWFpbHRvOmdhcnkuY291cnRAZ21haWwuY29tXCI+R2FyeSBDb3VydDwvYT5cbiAqIEBzZWUgaHR0cDovL2dpdGh1Yi5jb20vZ2FyeWNvdXJ0L211cm11cmhhc2gtanNcbiAqIEBhdXRob3IgPGEgaHJlZj1cIm1haWx0bzphYXBwbGVieUBnbWFpbC5jb21cIj5BdXN0aW4gQXBwbGVieTwvYT5cbiAqIEBzZWUgaHR0cDovL3NpdGVzLmdvb2dsZS5jb20vc2l0ZS9tdXJtdXJoYXNoL1xuICogXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyIEFTQ0lJIG9ubHlcbiAqIEBwYXJhbSB7bnVtYmVyfSBzZWVkIFBvc2l0aXZlIGludGVnZXIgb25seVxuICogQHJldHVybiB7bnVtYmVyfSAzMi1iaXQgcG9zaXRpdmUgaW50ZWdlciBoYXNoXG4gKi9cblxuZnVuY3Rpb24gbXVybXVyaGFzaDJfMzJfZ2Moc3RyLCBzZWVkKSB7XG4gIHZhclxuICAgIGwgPSBzdHIubGVuZ3RoLFxuICAgIGggPSBzZWVkIF4gbCxcbiAgICBpID0gMCxcbiAgICBrO1xuICBcbiAgd2hpbGUgKGwgPj0gNCkge1xuICBcdGsgPSBcbiAgXHQgICgoc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmKSkgfFxuICBcdCAgKChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgOCkgfFxuICBcdCAgKChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgMTYpIHxcbiAgXHQgICgoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDI0KTtcbiAgICBcbiAgICBrID0gKCgoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1KSArICgoKChrID4+PiAxNikgKiAweDViZDFlOTk1KSAmIDB4ZmZmZikgPDwgMTYpKTtcbiAgICBrIF49IGsgPj4+IDI0O1xuICAgIGsgPSAoKChrICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUpICsgKCgoKGsgPj4+IDE2KSAqIDB4NWJkMWU5OTUpICYgMHhmZmZmKSA8PCAxNikpO1xuXG5cdGggPSAoKChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUpICsgKCgoKGggPj4+IDE2KSAqIDB4NWJkMWU5OTUpICYgMHhmZmZmKSA8PCAxNikpIF4gaztcblxuICAgIGwgLT0gNDtcbiAgICArK2k7XG4gIH1cbiAgXG4gIHN3aXRjaCAobCkge1xuICBjYXNlIDM6IGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAyKSAmIDB4ZmYpIDw8IDE2O1xuICBjYXNlIDI6IGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAxKSAmIDB4ZmYpIDw8IDg7XG4gIGNhc2UgMTogaCBePSAoc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmKTtcbiAgICAgICAgICBoID0gKCgoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1KSArICgoKChoID4+PiAxNikgKiAweDViZDFlOTk1KSAmIDB4ZmZmZikgPDwgMTYpKTtcbiAgfVxuXG4gIGggXj0gaCA+Pj4gMTM7XG4gIGggPSAoKChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUpICsgKCgoKGggPj4+IDE2KSAqIDB4NWJkMWU5OTUpICYgMHhmZmZmKSA8PCAxNikpO1xuICBoIF49IGggPj4+IDE1O1xuXG4gIHJldHVybiBoID4+PiAwO1xufVxuXG5pZih0eXBlb2YgbW9kdWxlICE9PSB1bmRlZmluZWQpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBtdXJtdXJoYXNoMl8zMl9nY1xufVxuIiwiLyoqXG4gKiBKUyBJbXBsZW1lbnRhdGlvbiBvZiBNdXJtdXJIYXNoMyAocjEzNikgKGFzIG9mIE1heSAyMCwgMjAxMSlcbiAqIFxuICogQGF1dGhvciA8YSBocmVmPVwibWFpbHRvOmdhcnkuY291cnRAZ21haWwuY29tXCI+R2FyeSBDb3VydDwvYT5cbiAqIEBzZWUgaHR0cDovL2dpdGh1Yi5jb20vZ2FyeWNvdXJ0L211cm11cmhhc2gtanNcbiAqIEBhdXRob3IgPGEgaHJlZj1cIm1haWx0bzphYXBwbGVieUBnbWFpbC5jb21cIj5BdXN0aW4gQXBwbGVieTwvYT5cbiAqIEBzZWUgaHR0cDovL3NpdGVzLmdvb2dsZS5jb20vc2l0ZS9tdXJtdXJoYXNoL1xuICogXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IEFTQ0lJIG9ubHlcbiAqIEBwYXJhbSB7bnVtYmVyfSBzZWVkIFBvc2l0aXZlIGludGVnZXIgb25seVxuICogQHJldHVybiB7bnVtYmVyfSAzMi1iaXQgcG9zaXRpdmUgaW50ZWdlciBoYXNoIFxuICovXG5cbmZ1bmN0aW9uIG11cm11cmhhc2gzXzMyX2djKGtleSwgc2VlZCkge1xuXHR2YXIgcmVtYWluZGVyLCBieXRlcywgaDEsIGgxYiwgYzEsIGMxYiwgYzIsIGMyYiwgazEsIGk7XG5cdFxuXHRyZW1haW5kZXIgPSBrZXkubGVuZ3RoICYgMzsgLy8ga2V5Lmxlbmd0aCAlIDRcblx0Ynl0ZXMgPSBrZXkubGVuZ3RoIC0gcmVtYWluZGVyO1xuXHRoMSA9IHNlZWQ7XG5cdGMxID0gMHhjYzllMmQ1MTtcblx0YzIgPSAweDFiODczNTkzO1xuXHRpID0gMDtcblx0XG5cdHdoaWxlIChpIDwgYnl0ZXMpIHtcblx0ICBcdGsxID0gXG5cdCAgXHQgICgoa2V5LmNoYXJDb2RlQXQoaSkgJiAweGZmKSkgfFxuXHQgIFx0ICAoKGtleS5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCA4KSB8XG5cdCAgXHQgICgoa2V5LmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDE2KSB8XG5cdCAgXHQgICgoa2V5LmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDI0KTtcblx0XHQrK2k7XG5cdFx0XG5cdFx0azEgPSAoKCgoazEgJiAweGZmZmYpICogYzEpICsgKCgoKGsxID4+PiAxNikgKiBjMSkgJiAweGZmZmYpIDw8IDE2KSkpICYgMHhmZmZmZmZmZjtcblx0XHRrMSA9IChrMSA8PCAxNSkgfCAoazEgPj4+IDE3KTtcblx0XHRrMSA9ICgoKChrMSAmIDB4ZmZmZikgKiBjMikgKyAoKCgoazEgPj4+IDE2KSAqIGMyKSAmIDB4ZmZmZikgPDwgMTYpKSkgJiAweGZmZmZmZmZmO1xuXG5cdFx0aDEgXj0gazE7XG4gICAgICAgIGgxID0gKGgxIDw8IDEzKSB8IChoMSA+Pj4gMTkpO1xuXHRcdGgxYiA9ICgoKChoMSAmIDB4ZmZmZikgKiA1KSArICgoKChoMSA+Pj4gMTYpICogNSkgJiAweGZmZmYpIDw8IDE2KSkpICYgMHhmZmZmZmZmZjtcblx0XHRoMSA9ICgoKGgxYiAmIDB4ZmZmZikgKyAweDZiNjQpICsgKCgoKGgxYiA+Pj4gMTYpICsgMHhlNjU0KSAmIDB4ZmZmZikgPDwgMTYpKTtcblx0fVxuXHRcblx0azEgPSAwO1xuXHRcblx0c3dpdGNoIChyZW1haW5kZXIpIHtcblx0XHRjYXNlIDM6IGsxIF49IChrZXkuY2hhckNvZGVBdChpICsgMikgJiAweGZmKSA8PCAxNjtcblx0XHRjYXNlIDI6IGsxIF49IChrZXkuY2hhckNvZGVBdChpICsgMSkgJiAweGZmKSA8PCA4O1xuXHRcdGNhc2UgMTogazEgXj0gKGtleS5jaGFyQ29kZUF0KGkpICYgMHhmZik7XG5cdFx0XG5cdFx0azEgPSAoKChrMSAmIDB4ZmZmZikgKiBjMSkgKyAoKCgoazEgPj4+IDE2KSAqIGMxKSAmIDB4ZmZmZikgPDwgMTYpKSAmIDB4ZmZmZmZmZmY7XG5cdFx0azEgPSAoazEgPDwgMTUpIHwgKGsxID4+PiAxNyk7XG5cdFx0azEgPSAoKChrMSAmIDB4ZmZmZikgKiBjMikgKyAoKCgoazEgPj4+IDE2KSAqIGMyKSAmIDB4ZmZmZikgPDwgMTYpKSAmIDB4ZmZmZmZmZmY7XG5cdFx0aDEgXj0gazE7XG5cdH1cblx0XG5cdGgxIF49IGtleS5sZW5ndGg7XG5cblx0aDEgXj0gaDEgPj4+IDE2O1xuXHRoMSA9ICgoKGgxICYgMHhmZmZmKSAqIDB4ODVlYmNhNmIpICsgKCgoKGgxID4+PiAxNikgKiAweDg1ZWJjYTZiKSAmIDB4ZmZmZikgPDwgMTYpKSAmIDB4ZmZmZmZmZmY7XG5cdGgxIF49IGgxID4+PiAxMztcblx0aDEgPSAoKCgoaDEgJiAweGZmZmYpICogMHhjMmIyYWUzNSkgKyAoKCgoaDEgPj4+IDE2KSAqIDB4YzJiMmFlMzUpICYgMHhmZmZmKSA8PCAxNikpKSAmIDB4ZmZmZmZmZmY7XG5cdGgxIF49IGgxID4+PiAxNjtcblxuXHRyZXR1cm4gaDEgPj4+IDA7XG59XG5cbmlmKHR5cGVvZiBtb2R1bGUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBtdXJtdXJoYXNoM18zMl9nY1xufSIsInZhciBkZWZhdWx0UGFsZXR0ZT17NTA6W1wiI0ZGRUJFRVwiLFwiI0ZDRTRFQ1wiLFwiI0YzRTVGNVwiLFwiI0VERTdGNlwiLFwiI0U4RUFGNlwiLFwiI0UzRjJGRFwiLFwiI0UxRjVGRVwiLFwiI0UwRjdGQVwiLFwiI0UwRjJGMVwiLFwiI0U4RjVFOVwiLFwiI0YxRjhFOVwiLFwiI0Y5RkJFN1wiLFwiI0ZGRkRFN1wiLFwiI0ZGRjhFMVwiLFwiI0ZGRjNFMFwiLFwiI0ZCRTlFN1wiLFwiI0VGRUJFOVwiLFwiI0ZBRkFGQVwiLFwiI0VDRUZGMVwiXSwxMDA6W1wiI0ZGQ0REMlwiLFwiI0Y4QkJEMFwiLFwiI0UxQkVFN1wiLFwiI0QxQzRFOVwiLFwiI0M1Q0FFOVwiLFwiI0JCREVGQlwiLFwiI0IzRTVGQ1wiLFwiI0IyRUJGMlwiLFwiI0IyREZEQlwiLFwiI0M4RTZDOVwiLFwiI0RDRURDOFwiLFwiI0YwRjRDM1wiLFwiI0ZGRjlDNFwiLFwiI0ZGRUNCM1wiLFwiI0ZGRTBCMlwiLFwiI0ZGQ0NCQ1wiLFwiI0Q3Q0NDOFwiLFwiI0Y1RjVGNVwiLFwiI0NGRDhEQ1wiXSwyMDA6W1wiI0VGOUE5QVwiLFwiI0Y0OEZCMVwiLFwiI0NFOTNEOFwiLFwiI0IzOUREQlwiLFwiIzlGQThEQVwiLFwiIzkwQ0FGOVwiLFwiIzgxRDRGQVwiLFwiIzgwREVFQVwiLFwiIzgwQ0JDNFwiLFwiI0E1RDZBN1wiLFwiI0M1RTFBNVwiLFwiI0U2RUU5Q1wiLFwiI0ZGRjU5RFwiLFwiI0ZGRTA4MlwiLFwiI0ZGQ0M4MFwiLFwiI0ZGQUI5MVwiLFwiI0JDQUFBNFwiLFwiI0VFRUVFRVwiLFwiI0IwQkVDNVwiXSwzMDA6W1wiI0U1NzM3M1wiLFwiI0YwNjI5MlwiLFwiI0JBNjhDOFwiLFwiIzk1NzVDRFwiLFwiIzc5ODZDQlwiLFwiIzY0QjVGNlwiLFwiIzRGQzNGN1wiLFwiIzRERDBFMVwiLFwiIzREQjZBQ1wiLFwiIzgxQzc4NFwiLFwiI0FFRDU4MVwiLFwiI0RDRTc3NVwiLFwiI0ZGRjE3NlwiLFwiI0ZGRDU0RlwiLFwiI0ZGQjc0RFwiLFwiI0ZGOEE2NVwiLFwiI0ExODg3RlwiLFwiI0UwRTBFMFwiLFwiIzkwQTRBRVwiXSw0MDA6W1wiI0VGNTM1MFwiLFwiI0VDNDA3QVwiLFwiI0FCNDdCQ1wiLFwiIzdFNTdDMlwiLFwiIzVDNkJDMFwiLFwiIzQyQTVGNVwiLFwiIzI5QjZGNlwiLFwiIzI2QzZEQVwiLFwiIzI2QTY5QVwiLFwiIzY2QkI2QVwiLFwiIzlDQ0M2NVwiLFwiI0Q0RTE1N1wiLFwiI0ZGRUU1OFwiLFwiI0ZGQ0EyOFwiLFwiI0ZGQTcyNlwiLFwiI0ZGNzA0M1wiLFwiIzhENkU2M1wiLFwiI0JEQkRCRFwiLFwiIzc4OTA5Q1wiXSw1MDA6W1wiI0Y0NDMzNlwiLFwiI0U5MUU2M1wiLFwiIzlDMjdCMFwiLFwiIzY3M0FCN1wiLFwiIzNGNTFCNVwiLFwiIzIxOTZGM1wiLFwiIzAzQTlGNFwiLFwiIzAwQkNENFwiLFwiIzAwOTY4OFwiLFwiIzRDQUY1MFwiLFwiIzhCQzM0QVwiLFwiI0NEREMzOVwiLFwiI0ZGRUIzQlwiLFwiI0ZGQzEwN1wiLFwiI0ZGOTgwMFwiLFwiI0ZGNTcyMlwiLFwiIzc5NTU0OFwiLFwiIzlFOUU5RVwiLFwiIzYwN0Q4QlwiXSw2MDA6W1wiI0U1MzkzNVwiLFwiI0Q4MUI2MFwiLFwiIzhFMjRBQVwiLFwiIzVFMzVCMVwiLFwiIzM5NDlBQlwiLFwiIzFFODhFNVwiLFwiIzAzOUJFNVwiLFwiIzAwQUNDMVwiLFwiIzAwODk3QlwiLFwiIzQzQTA0N1wiLFwiIzdDQjM0MlwiLFwiI0MwQ0EzM1wiLFwiI0ZERDgzNVwiLFwiI0ZGQjMwMFwiLFwiI0ZCOEMwMFwiLFwiI0Y0NTExRVwiLFwiIzZENEM0MVwiLFwiIzc1NzU3NVwiLFwiIzU0NkU3QVwiXSw3MDA6W1wiI0QzMkYyRlwiLFwiI0MyMTg1QlwiLFwiIzdCMUZBMlwiLFwiIzUxMkRBOFwiLFwiIzMwM0Y5RlwiLFwiIzE5NzZEMlwiLFwiIzAyODhEMVwiLFwiIzAwOTdBN1wiLFwiIzAwNzk2QlwiLFwiIzM4OEUzQ1wiLFwiIzY4OUYzOFwiLFwiI0FGQjQyQlwiLFwiI0ZCQzAyRFwiLFwiI0ZGQTAwMFwiLFwiI0Y1N0MwMFwiLFwiI0U2NEExOVwiLFwiIzVENDAzN1wiLFwiIzYxNjE2MVwiLFwiIzQ1NUE2NFwiXSw4MDA6W1wiI0M2MjgyOFwiLFwiI0FEMTQ1N1wiLFwiIzZBMUI5QVwiLFwiIzQ1MjdBMFwiLFwiIzI4MzU5M1wiLFwiIzE1NjVDMFwiLFwiIzAyNzdCRFwiLFwiIzAwODM4RlwiLFwiIzAwNjk1Q1wiLFwiIzJFN0QzMlwiLFwiIzU1OEIyRlwiLFwiIzlFOUQyNFwiLFwiI0Y5QTgyNVwiLFwiI0ZGOEYwMFwiLFwiI0VGNkMwMFwiLFwiI0Q4NDMxNVwiLFwiIzRFMzQyRVwiLFwiIzQyNDI0MlwiLFwiIzM3NDc0RlwiXSw5MDA6W1wiI0I3MUMxQ1wiLFwiIzg4MEU0RlwiLFwiIzRBMTQ4Q1wiLFwiIzMxMUI5MlwiLFwiIzFBMjM3RVwiLFwiIzBENDdBMVwiLFwiIzAxNTc5QlwiLFwiIzAwNjA2NFwiLFwiIzAwNEQ0MFwiLFwiIzFCNUUyMFwiLFwiIzMzNjkxRVwiLFwiIzgyNzcxN1wiLFwiI0Y1N0YxN1wiLFwiI0ZGNkYwMFwiLFwiI0U2NTEwMFwiLFwiI0JGMzYwQ1wiLFwiIzNFMjcyM1wiLFwiIzIxMjEyMVwiLFwiIzI2MzIzOFwiXSxBMTAwOltcIiNGRjhBODBcIixcIiNGRjgwQUJcIixcIiNFQTgwRkNcIixcIiNCMzg4RkZcIixcIiM4QzlFRkZcIixcIiM4MkIxRkZcIixcIiM4MEQ4RkZcIixcIiM4NEZGRkZcIixcIiNBN0ZGRUJcIixcIiNCOUY2Q0FcIixcIiNDQ0ZGOTBcIixcIiNGNEZGODFcIixcIiNGRkZGOERcIixcIiNGRkU1N0ZcIixcIiNGRkQxODBcIixcIiNGRjlFODBcIl0sQTIwMDpbXCIjRkY1MjUyXCIsXCIjRkY0MDgxXCIsXCIjRTA0MEZCXCIsXCIjN0M0REZGXCIsXCIjNTM2REZFXCIsXCIjNDQ4QUZGXCIsXCIjNDBDNEZGXCIsXCIjMThGRkZGXCIsXCIjNjRGRkRBXCIsXCIjNjlGMEFFXCIsXCIjQjJGRjU5XCIsXCIjRUVGRjQxXCIsXCIjRkZGRjAwXCIsXCIjRkZENzQwXCIsXCIjRkZBQjQwXCIsXCIjRkY2RTQwXCJdLEE0MDA6W1wiI0ZGMTc0NFwiLFwiI0Y1MDA1N1wiLFwiI0Q1MDBGOVwiLFwiIzY1MUZGRlwiLFwiIzNENUFGRVwiLFwiIzI5NzlGRlwiLFwiIzAwQjBGRlwiLFwiIzAwRTVGRlwiLFwiIzFERTlCNlwiLFwiIzAwRTY3NlwiLFwiIzc2RkYwM1wiLFwiI0M2RkYwMFwiLFwiI0ZGRUEwMFwiLFwiI0ZGQzQwMFwiLFwiI0ZGOTEwMFwiLFwiI0ZGM0QwMFwiXSxBNzAwOltcIiNENTAwMDBcIixcIiNDNTExNjJcIixcIiNBQTAwRkZcIixcIiM2MjAwRUFcIixcIiMzMDRGRkVcIixcIiMyOTYyRkZcIixcIiMwMDkxRUFcIixcIiMwMEI4RDRcIixcIiMwMEJGQTVcIixcIiMwMEM4NTNcIixcIiM2NEREMTdcIixcIiNBRUVBMDBcIixcIiNGRkQ2MDBcIixcIiNGRkFCMDBcIixcIiNGRjZEMDBcIixcIiNERDJDMDBcIl19LG11cm11cj1yZXF1aXJlKFwibXVybXVyaGFzaC1qc1wiKTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciBGPVtdLEU9e3NoYWRlczpbXCI1MDBcIl0scGFsZXR0ZTpkZWZhdWx0UGFsZXR0ZSx0ZXh0Om51bGwsaWdub3JlQ29sb3JzOltdfSxDPWZ1bmN0aW9uKEMpe0N8fChDPUUpLEMucGFsZXR0ZXx8KEMucGFsZXR0ZT1kZWZhdWx0UGFsZXR0ZSksQy5zaGFkZXN8fChDLnNoYWRlcz1bXCI1MDBcIl0pO2Zvcih2YXIgQixEPUYubGVuZ3RoLHQ9MDtEPnQ7dCsrKWlmKEMudGV4dCYmRlt0XS50ZXh0PT09Qy50ZXh0KXJldHVybiBGW3RdLmNvbG9yO3JldHVybiBCPUEoQyksQy50ZXh0JiZGLnB1c2goe3RleHQ6Qy50ZXh0LGNvbG9yOkJ9KSxCfSxBPWZ1bmN0aW9uKEYpe3ZhciBFPUYuc2hhZGVzW0IoRi5zaGFkZXMubGVuZ3RoKV0sQz1cIlwiO2Zvcih2YXIgQSBpbiBGLnBhbGV0dGUpRi5wYWxldHRlLmhhc093blByb3BlcnR5KEEpJiZBPT09RSYmKEM9Ri50ZXh0P0YucGFsZXR0ZVtBXVtEKEYudGV4dCxGLnBhbGV0dGVbQV0ubGVuZ3RoKV06Ri5wYWxldHRlW0FdW0IoRi5wYWxldHRlW0FdLmxlbmd0aCldKTtyZXR1cm4gQ30sQj1mdW5jdGlvbihGKXtyZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKkYpfSxEPWZ1bmN0aW9uKEYsRSl7dmFyIEM9bXVybXVyLm11cm11cjMoRikvMWUxMDtyZXR1cm4uMT5DJiYoQz0xMCpDKSxNYXRoLmZsb29yKEMqRSl9O3JldHVybntnZXRDb2xvcjpDfX0oKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgU0FWRV9DQVJEUzogJ1NBVkVfQ0FSRFMnLFxuICBTRUxFQ1RfQ0FSRDogJ1NFTEVDVF9DQVJEJyxcbiAgUkVSRU5ERVI6ICdSRVJFTkRFUicsXG4gIEFTQ0lJOiB7XG4gICAgRVNDQVBFX0tFWTogMjcsXG4gICAgVEFCX0tFWTogOSxcbiAgICBDX0tFWTogNjcsXG4gICAgRF9LRVk6IDY4LFxuICAgIEVfS0VZOiA2OSxcbiAgICBQTFVTX0tFWTogMTg3LFxuICAgIE1JTlVTX0tFWTogMTg5LFxuICAgIERPVF9LRVk6IDE5MCxcbiAgICBBX0tFWTogNjUsXG4gICAgSV9LRVk6IDczLFxuICAgIFJfS0VZOiA4MixcbiAgICBaX0tFWTogOTAsXG4gICAgS0VZU19BUlJBWTogWzI3LCA5LCA2NywgNjgsIDY5LCAxODcsIDE4OSwgMTkwLCA2NSwgNzMsIDgyLCA5MF0sXG4gIH0sXG4gIERFRkFVTFRfQ09OVEVOVDogJ1czc2lhV1FpT2lJd0lpd2libUZ0WlNJNklsVnpaU0IwWVdJZ1lXNWtJSE5vYVdaMElIUmhZaUIwYnlCamFYSmpiR1VnWW1WMGQyVmxiaUJqWVhKa2N5QTZSRnh1WEc1RWNtRm5aMmx1WnlCdmNpQmpiR2xqYTJsdVp5QjBhR1Z0SUhkcGJHd2dZV3h6YnlCdFlYSnJJSFJvWlcwZ1lYTWdjMlZzWldOMFpXUWlMQ0prWlhCMGFDSTZOU3dpZUNJNklqRXlNM0I0SWl3aWVTSTZJalU1Y0hnaUxDSmpiMnh2Y2lJNklpTTBSRVF3UlRFaUxDSnpaV3hsWTNSbFpDSTZkSEoxWlN3aWJtOWtaU0k2ZXlKcVVYVmxjbmt4TnpJd09ESTBNREUxTlRFMU1UWTFNRGczT1NJNk5IMTlMSHNpYVdRaU9pSXhJaXdpYm1GdFpTSTZJazl1SUdFZ2JXRnlhMlZrSUdOaGNtUWdkWE5sT2x4dUoyTW5JSFJ2SUdOdmNIa2dkR2hsSUdOdmJuUmxiblJjYmlka0p5QjBieUJrWld4bGRHVWdhWFJjYmlkbEp5QjBieUJsWkdsMElHbDBYRzRuS3ljZ1lXNWtJQ2N0SnlCMGJ5QnRiMlJwWm5rZ2RHaGxJR1JsY0hSb0lHOW1JSFJvWlNCallYSmtJR0Z1WkNBbkxpY2dkRzhnY21WelpYUWdhWFJjYmlkaEp5QjBieUJoY21Ob2FYWmxJRzl5SUdSbFlYSmphR2wyWlNCa1pTQmpZWEprWEc0bmFTY2dkRzhnWm05amRYTWdiMjRnZEdobElHRmtaQ0J1WlhjZ1kyRnlaQ0JwYm5CMWRDSXNJbVJsY0hSb0lqbzJMQ0o0SWpvaU16UXljSGdpTENKNUlqb2lOVFJ3ZUNJc0ltTnZiRzl5SWpvaUl6Z3dRMEpETkNJc0luTmxiR1ZqZEdWa0lqcG1ZV3h6WlN3aWJtOWtaU0k2ZXlKcVVYVmxjbmt4TnpJd09ESTBNREUxTlRFMU1UWTFNRGczT1NJNk4zMTlMSHNpYVdRaU9pSXlJaXdpYm1GdFpTSTZJbGRvYVd4bElHVmthWFJwYm1jZ2RYTmxJSE5vYVdaMElDc2daVzUwWlhJZ2RHOGdYRzVwYm5ObGNuUmNibUZjYm14cGJtVmNibUp5WldGclhHNDZSQ0lzSW1SbGNIUm9Jam8xTENKNElqb2lNVEl4Y0hnaUxDSjVJam9pTWpjemNIZ2lMQ0pqYjJ4dmNpSTZJaU0yTkVJMVJqWWlMQ0p6Wld4bFkzUmxaQ0k2Wm1Gc2MyVXNJbTV2WkdVaU9uc2lhbEYxWlhKNU1UY3lNRGd5TkRBeE5UVXhOVEUyTlRBNE56a2lPalo5ZlYwPScsXG4gIFZFUlNJT046ICcwLjUuMCcsXG59OyIsImNvbnN0IENPTkZJRyA9IHJlcXVpcmUoJy4uL2NvbmZpZycpO1xuXG5sZXQgY2FyZE1hbmFnZXIsXG4gICAgQ2FyZCA9IHJlcXVpcmUoJy4uL21vZGVscy9DYXJkJyk7XG5cbmxldCBtYWluQ29udGFpbmVyLFxuICAgIGlucHV0LFxuICAgIGVkaXRDb250YWluZXIsXG4gICAgZWRpdElucHV0LFxuICAgIGltcG9ydENvbnRhaW5lcixcbiAgICBpbXBvcnRJbnB1dCxcbiAgICBleHBvcnRDb250YWluZXIsXG4gICAgZXhwb3J0Q29udGVudCxcbiAgICBpbXBvcnRCdXR0b247XG5cblxuZnVuY3Rpb24gaW5pdChvcHRpb25zKSB7XG4gICAgY2FyZE1hbmFnZXIgPSBvcHRpb25zLmNhcmRNYW5hZ2VyO1xuICAgIGJpbmRpbmdzKCk7XG59XG5cbmZ1bmN0aW9uIGJpbmRpbmdzKCkge1xuICAgIG1haW5Db250YWluZXIgPSAkKCcjbWFpbkNvbnRhaW5lcicpO1xuICAgIGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm1Db250YWluZXIgaW5wdXQnKTtcbiAgICBlZGl0Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VkaXRDb250YWluZXInKTtcbiAgICBlZGl0SW5wdXQgPSBlZGl0Q29udGFpbmVyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RleHRhcmVhJylbMF07XG4gICAgaW1wb3J0Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltcG9ydENvbnRhaW5lcicpO1xuICAgIGltcG9ydElucHV0ID0gaW1wb3J0Q29udGFpbmVyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2lucHV0JylbMF07XG4gICAgaW1wb3J0QnV0dG9uID0gaW1wb3J0Q29udGFpbmVyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2J1dHRvbicpWzBdO1xuICAgIGV4cG9ydENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleHBvcnRDb250YWluZXInKTtcbiAgICBleHBvcnRDb250ZW50ID0gZXhwb3J0Q29udGFpbmVyLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdkaXYnKVswXTtcblxuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywga2V5SGFuZGxlclVwLCBmYWxzZSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBrZXlIYW5kbGVyRG93biwgZmFsc2UpO1xuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBtYWluSW5wdXRLZXlFdmVudCk7XG4gICAgZWRpdElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBlZGl0SW5wdXRLZXlFdmVudCk7XG4gICAgZWRpdENvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhpZGVFZGl0Q29udGFpbmVyKTtcbiAgICBlZGl0SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzdG9wUHJvcGFnYXRpb24pO1xuICAgIC8qXG4gICAgIE9uIGRvdWJsZSBjbGljayBlZGl0IHRoZSBjYXJkXG4gICAgICovXG4gICAgbWFpbkNvbnRhaW5lci5vbignZGJsY2xpY2snLCAnZGl2JywgZG91YmxlQ2xpY2tIYW5kbGVyKTtcbiAgICAvKlxuICAgICBPbiBjbGljayBwZXJmb3JtIHRoZSBjYXJkXG4gICAgICovXG4gICAgbWFpbkNvbnRhaW5lci5vbignY2xpY2snLCAnZGl2JywgY2FyZENsaWNrRXZlbnRzKTtcbiAgICBtYWluQ29udGFpbmVyLm9uKCdjbGljaycsICdkaXYgPiBkaXYnLCBjYXJkTWVudUV2ZW50cyk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4cG9ydCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXhwb3J0Q2FyZHMpO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbXBvcnQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNob3dJbXBvcnRlcik7XG4gICAgaW1wb3J0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbG9hZEltcG9ydENhcmRzQ29kZSk7XG4gICAgaW1wb3J0Q29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGlkZUltcG9ydENvbnRhaW5lcik7XG4gICAgaW1wb3J0SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGltcG9ydElucHV0S2V5RXZlbnQpO1xuICAgIGltcG9ydElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3RvcFByb3BhZ2F0aW9uKTtcbiAgICBleHBvcnRDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoaWRlRXhwb3J0Q29udGFpbmVyKTtcbiAgICBleHBvcnRDb250ZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3RvcFByb3BhZ2F0aW9uKTtcbn1cblxuZnVuY3Rpb24ga2V5SGFuZGxlckRvd24oZSkge1xuXG4gICAgaWYgKGUua2V5Q29kZSA9PT0gQ09ORklHLkFTQ0lJLlRBQl9LRVkpIHtcbiAgICAgICAgZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5ibHVyKCk7XG4gICAgICAgIGlmIChldmVudC5zaGlmdEtleSkge1xuICAgICAgICAgICAgY2FyZE1hbmFnZXIucHJldmlvdXNDYXJkKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYXJkTWFuYWdlci5uZXh0Q2FyZCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmZ1bmN0aW9uIGtleUhhbmRsZXJVcChlKSB7XG4gICAgY29uc29sZS5sb2coZS5rZXlDb2RlKTtcbiAgICBpZiAoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAhPT0gZG9jdW1lbnQuYm9keSB8fCBDT05GSUcuQVNDSUkuS0VZU19BUlJBWS5pbmRleE9mKGUua2V5Q29kZSkgPT09IC0xKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBzd2l0Y2ggKGUua2V5Q29kZSkge1xuICAgICAgICBjYXNlIENPTkZJRy5BU0NJSS5DX0tFWTpcbiAgICAgICAgICAgIGlmIChldmVudC5jdHJsS2V5KSB7XG4gICAgICAgICAgICAgICAgbGV0IGVsZW0gPSBjYXJkTWFuYWdlci5zZWxlY3RlZENhcmQubm9kZSxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uO1xuXG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uID0gc2VsZWN0VGV4dChlbGVtLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NhcmRUZXh0JylbMF0pO1xuICAgICAgICAgICAgICAgIGNvcHlTZWxlY3Rpb25UZXh0KCk7XG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uLmVtcHR5KCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIENPTkZJRy5BU0NJSS5EX0tFWTpcbiAgICAgICAgICAgIGlmIChldmVudC5jdHJsS2V5KSB7XG4gICAgICAgICAgICAgICAgbGV0IGNhcmQgPSBjYXJkTWFuYWdlci5zZWxlY3RlZENhcmQ7XG4gICAgICAgICAgICAgICAgY2FyZE1hbmFnZXIubmV4dENhcmQoKTtcblxuICAgICAgICAgICAgICAgIGNhcmRNYW5hZ2VyLmRlbGV0ZUNhcmQoY2FyZCk7XG5cbiAgICAgICAgICAgICAgICBjYXJkTWFuYWdlci5zYXZlQ2FyZHMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIENPTkZJRy5BU0NJSS5FX0tFWTpcbiAgICAgICAgICAgIGlmIChldmVudC5jdHJsS2V5KSB7XG4gICAgICAgICAgICAgICAgZG91YmxlQ2xpY2tIYW5kbGVyLmFwcGx5KGNhcmRNYW5hZ2VyLnNlbGVjdGVkQ2FyZC5ub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIENPTkZJRy5BU0NJSS5BX0tFWTpcbiAgICAgICAgICAgIGlmIChldmVudC5jdHJsS2V5KSB7XG4gICAgICAgICAgICAgICAgY2FyZE1hbmFnZXIuc2VsZWN0ZWRDYXJkLnRvZ2dsZUFyY2hpdmVkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBDT05GSUcuQVNDSUkuSV9LRVk6XG4gICAgICAgICAgICBpZiAoZXZlbnQuY3RybEtleSkge1xuICAgICAgICAgICAgICAgIGlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBDT05GSUcuQVNDSUkuUExVU19LRVk6XG4gICAgICAgICAgICBjaGFuZ2VEZXB0aC5hcHBseShjYXJkTWFuYWdlci5zZWxlY3RlZENhcmQubm9kZSwgW2NhcmRNYW5hZ2VyLnNlbGVjdGVkQ2FyZC5pZCwgMV0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgQ09ORklHLkFTQ0lJLk1JTlVTX0tFWTpcbiAgICAgICAgICAgIGNoYW5nZURlcHRoLmFwcGx5KGNhcmRNYW5hZ2VyLnNlbGVjdGVkQ2FyZC5ub2RlLCBbY2FyZE1hbmFnZXIuc2VsZWN0ZWRDYXJkLmlkLCAtMV0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgQ09ORklHLkFTQ0lJLkRPVF9LRVk6XG4gICAgICAgICAgICBzZXREZXB0aC5hcHBseShjYXJkTWFuYWdlci5zZWxlY3RlZENhcmQubm9kZSwgW2NhcmRNYW5hZ2VyLnNlbGVjdGVkQ2FyZC5pZCwgNV0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgQ09ORklHLkFTQ0lJLlJfS0VZOlxuICAgICAgICAgICAgY2FyZE1hbmFnZXIuc2VsZWN0ZWRDYXJkLmNvbG9yID0gY2FyZE1hbmFnZXIuc2VsZWN0ZWRDYXJkLmdldEJhY2tncm91bmRDb2xvcigpO1xuICAgICAgICAgICAgY2FyZE1hbmFnZXIuc2VsZWN0ZWRDYXJkLmRlcmVuZGVyKCk7XG4gICAgICAgICAgICBjYXJkTWFuYWdlci5zZWxlY3RlZENhcmQucmVuZGVyKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBDT05GSUcuQVNDSUkuWl9LRVk6XG4gICAgICAgICAgICBpZiAoZXZlbnQuY3RybEtleSkge1xuICAgICAgICAgICAgICAgIGNhcmRNYW5hZ2VyLnVuZGVsZXRlTGFzdENhcmQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gaGlkZUV4cG9ydENvbnRhaW5lcigpIHtcbiAgICBleHBvcnRDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbn1cblxuZnVuY3Rpb24gaGlkZUVkaXRDb250YWluZXIoKSB7XG4gICAgZWRpdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xufVxuXG5mdW5jdGlvbiBoaWRlSW1wb3J0Q29udGFpbmVyKCkge1xuICAgIGltcG9ydENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xufVxuXG5mdW5jdGlvbiBzdG9wUHJvcGFnYXRpb24oZSkge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG59XG5cbmZ1bmN0aW9uIG1haW5JbnB1dEtleUV2ZW50KGV2ZW50KSB7XG4gICAgbGV0IGNhcmQ7XG5cbiAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgICAgY2FyZCA9IGNhcmRNYW5hZ2VyLmFkZENhcmQoT2JqZWN0LmNyZWF0ZShDYXJkLCB7fSkuaW5pdChpbnB1dC52YWx1ZSkpO1xuICAgICAgICBjYXJkLnJlbmRlcigpO1xuICAgICAgICB0aGlzLnZhbHVlID0gJyc7XG4gICAgICAgIGNhcmRNYW5hZ2VyLnNhdmVDYXJkcygpO1xuICAgICAgICBjYXJkTWFuYWdlci5zZWxlY3RDYXJkKGNhcmQuaWQpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZWRpdElucHV0S2V5RXZlbnQoZXZlbnQpIHtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBsZXQgY2FyZDtcbiAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMTMgJiYgZXZlbnQuc2hpZnRLZXkpIHJldHVybjtcbiAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgICAgY2FyZCA9IGNhcmRNYW5hZ2VyLmNhcmRzW2VkaXRDb250YWluZXIuY2FyZElkXTtcbiAgICAgICAgY2FyZC5uYW1lID0gZWRpdElucHV0LnZhbHVlO1xuICAgICAgICBjYXJkLmRlcmVuZGVyKCk7XG4gICAgICAgIGNhcmQucmVuZGVyKCk7XG4gICAgICAgIHRoaXMudmFsdWUgPSAnJztcbiAgICAgICAgY2FyZE1hbmFnZXIuc2F2ZUNhcmRzKCk7XG4gICAgICAgIGhpZGVFZGl0Q29udGFpbmVyKCk7XG4gICAgfSBlbHNlIGlmIChldmVudC5rZXlDb2RlID09PSAyNykge1xuICAgICAgICBoaWRlRWRpdENvbnRhaW5lcigpO1xuICAgIH1cblxufVxuXG5mdW5jdGlvbiBpbXBvcnRJbnB1dEtleUV2ZW50KGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDI3KSB7XG4gICAgICAgIGhpZGVJbXBvcnRDb250YWluZXIoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRvdWJsZUNsaWNrSGFuZGxlcigpIHtcbiAgICBsZXQgZWxlbSA9IHRoaXMucXVlcnlTZWxlY3RvcignLmNhcmRUZXh0JyksXG4gICAgICAgIGNhcmRJZCxcbiAgICAgICAgY2FyZDtcblxuICAgIGlmICh0aGlzLmlkID09PSAnJykge1xuICAgICAgICBjYXJkSWQgPSBwYXJzZUludCh0aGlzLnBhcmVudEVsZW1lbnQuaWQuc3BsaXQoJ18nKVsxXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY2FyZElkID0gcGFyc2VJbnQodGhpcy5pZC5zcGxpdCgnXycpWzFdKTtcbiAgICB9XG5cbiAgICBjYXJkID0gY2FyZE1hbmFnZXIuY2FyZHNbY2FyZElkXTtcblxuICAgIGVkaXRJbnB1dC52YWx1ZSA9IGNhcmQubmFtZTtcbiAgICBlZGl0Q29udGFpbmVyLmNhcmRJZCA9IGNhcmRJZDtcbiAgICBlZGl0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIGVkaXRJbnB1dC5zdHlsZS50b3AgPSBjYXJkLnk7XG4gICAgZWRpdElucHV0LnN0eWxlLmxlZnQgPSBjYXJkLng7XG4gICAgZWRpdElucHV0LnN0eWxlWydwYWRkaW5nLXRvcCddID0gJzIzcHgnO1xuICAgIGVkaXRJbnB1dC5mb2N1cygpO1xufVxuXG5mdW5jdGlvbiBjYXJkQ2xpY2tFdmVudHMoZXZlbnQpIHtcbiAgICBsZXQgZWxlbSA9IHRoaXMucXVlcnlTZWxlY3RvcignLmNhcmRUZXh0JyksXG4gICAgICAgIGNhcmRJZCxcbiAgICAgICAgY2FyZDtcblxuICAgIGlmICh0aGlzLmlkID09PSBcIlwiKSB7XG4gICAgICAgIGNhcmRJZCA9IHBhcnNlSW50KHRoaXMucGFyZW50RWxlbWVudC5pZC5zcGxpdCgnXycpWzFdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBjYXJkSWQgPSBwYXJzZUludCh0aGlzLmlkLnNwbGl0KCdfJylbMV0pO1xuICAgIH1cblxuICAgIGNhcmQgPSBjYXJkTWFuYWdlci5jYXJkc1tjYXJkSWRdO1xuXG4gICAgaWYgKGNhcmQgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgY2FyZE1hbmFnZXIuc2VsZWN0Q2FyZChjYXJkLmlkKTtcblxuICAgIGlmIChldmVudC5jdHJsS2V5KSB7XG4gICAgfVxuICAgIGlmIChldmVudC5hbHRLZXkpIHtcbiAgICAgICAgdGhpcy5xdWVyeVNlbGVjdG9yKCcuY29weScpLmNsaWNrKCk7XG4gICAgfVxuICAgIGlmIChldmVudC5zaGlmdEtleSkge1xuXG4gICAgfVxufVxuXG5mdW5jdGlvbiBjYXJkTWVudUV2ZW50cygpIHtcbiAgICBsZXQgb3B0aW9uID0gJCh0aGlzKS5odG1sKCksXG4gICAgICAgIHNlbGVjdGlvbixcbiAgICAgICAgY2FyZElkID0gZ2V0UGFyZW50Q2FyZElkKHRoaXMpO1xuXG4gICAgc3dpdGNoIChvcHRpb24pIHtcbiAgICAgICAgY2FzZSAnKyc6XG4gICAgICAgICAgICBjaGFuZ2VEZXB0aC5hcHBseSh0aGlzLCBbY2FyZElkLCAxXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnLSc6XG4gICAgICAgICAgICBjaGFuZ2VEZXB0aC5hcHBseSh0aGlzLCBbY2FyZElkLCAtMV0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0MnOlxuICAgICAgICAgICAgc2VsZWN0aW9uID0gc2VsZWN0VGV4dCh0aGlzLnBhcmVudEVsZW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY2FyZFRleHQnKVswXSk7XG4gICAgICAgICAgICBjb3B5U2VsZWN0aW9uVGV4dCgpO1xuICAgICAgICAgICAgc2VsZWN0aW9uLmVtcHR5KCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAneCc6XG4gICAgICAgICAgICBjYXJkTWFuYWdlci5kZWxldGVDYXJkKGNhcmRNYW5hZ2VyLmNhcmRzW2NhcmRJZF0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ1YnOlxuICAgICAgICBjYXNlICdPJzpcbiAgICAgICAgICAgIGNhcmRNYW5hZ2VyLmNhcmRzW2NhcmRJZF0udG9nZ2xlQXJjaGl2ZWQoKTtcbiAgICB9XG4gICAgY2FyZE1hbmFnZXIuc2F2ZUNhcmRzKCk7XG59XG5cbmZ1bmN0aW9uIGV4cG9ydENhcmRzKCkge1xuICAgIGV4cG9ydENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBleHBvcnRDb250ZW50LmlubmVySFRNTCA9IGNhcmRNYW5hZ2VyLmV4cG9ydENhcmRzKCk7XG4gICAgc2VsZWN0aW9uID0gc2VsZWN0VGV4dChleHBvcnRDb250ZW50KTtcbiAgICBjb3B5U2VsZWN0aW9uVGV4dCgpO1xuICAgIHNlbGVjdGlvbi5lbXB0eSgpO1xufVxuXG5mdW5jdGlvbiBsb2FkSW1wb3J0Q2FyZHNDb2RlKCkge1xuICAgIGxldCBkYXRhID0gaW1wb3J0SW5wdXQudmFsdWU7XG4gICAgY2FyZE1hbmFnZXIuaW1wb3J0Q2FyZHMoZGF0YSk7XG4gICAgaW1wb3J0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG59XG5cbmZ1bmN0aW9uIHNob3dJbXBvcnRlcigpIHtcbiAgICBpbXBvcnRDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgaW1wb3J0SW5wdXQuZm9jdXMoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgaW5pdDogaW5pdFxufTsiLCJcbnZhciBzdWJzID0ge307XG5cblxuZnVuY3Rpb24gcHViKG5hbWUsIHBhcmFtcykge1xuICBzdWJzW25hbWVdLmZvckVhY2goZnVuY3Rpb24oZWxlbSkge1xuICAgIGVsZW0uY2FsbGJhY2suYXBwbHkoZWxlbS5jb250ZXh0LCBwYXJhbXMpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gc3ViKG5hbWUsIGNhbGxiYWNrLCBjb250ZXh0KSB7XG4gIGlmIChzdWJzW25hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICBzdWJzW25hbWVdID0gW107XG4gIH1cblxuICBzdWJzW25hbWVdLnB1c2goe1xuICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICBjb250ZXh0OiBjb250ZXh0XG4gIH0pO1xufVxuXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBwdWI6IHB1YixcbiAgc3ViOiBzdWJcbn07Iiwid2luZG93LkNPTkZJRyA9IHJlcXVpcmUoJy4vY29uZmlnLmpzJyk7XG5cbmxldCBrZXlIYW5kbGVyID0gcmVxdWlyZSgnLi9saWIva2V5SGFuZGxlcicpLFxuICBjYXJkTWFuYWdlciA9IHJlcXVpcmUoJy4vbW9kZWxzL0NhcmRNYW5hZ2VyJykuZ2V0SW5zdGFuY2UoKSxcbiAgcHVic3ViID0gcmVxdWlyZSgnLi9saWIvcHVic3ViJyk7XG5cbndpbmRvdy5jbSA9IHtcbiAgY2FyZE1hbmFnZXI6IGNhcmRNYW5hZ2VyXG59O1xuXG5PYmplY3QuYXNzaWduKHdpbmRvdywgcmVxdWlyZSgnLi9wcm90b3R5cGVzJykpO1xuXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XG4gICdzdHJpY3QgbW9kZSc7XG5cbiAga2V5SGFuZGxlci5pbml0KHtcbiAgICBjYXJkTWFuYWdlcjogY2FyZE1hbmFnZXJcbiAgfSk7XG5cbiAgY2FyZE1hbmFnZXIubG9hZENhcmRzKCk7XG4gIGNhcmRNYW5hZ2VyLnJlbmRlckFsbENhcmRzKCk7XG59KTtcbiIsImxldCBwdWJzdWIgPSByZXF1aXJlKCcuLi9saWIvcHVic3ViJyksXG4gICAgcmFuZG9tTUMgPSByZXF1aXJlKCdyYW5kb20tbWF0ZXJpYWwtY29sb3InKTtcblxuXG5sZXQgQ2FyZCA9IHtcbiAgICBpbml0OiBmdW5jdGlvbihuYW1lKSB7XG4gICAgICAgIHRoaXMuaWQgPSAtMTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5kZXB0aCA9IDU7XG4gICAgICAgIHRoaXMueCA9IDEwMDtcbiAgICAgICAgdGhpcy55ID0gMTAwO1xuICAgICAgICB0aGlzLmNvbG9yID0gdGhpcy5nZXRCYWNrZ3JvdW5kQ29sb3IoKTtcbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzQXJjaGl2ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pc0RlbGV0ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jcmVhdGVkQXQgPSArIG5ldyBEYXRlKCk7XG4gICAgICAgIHRoaXMuYXJjaGl2ZWRBdCA9IG51bGw7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICByZW5kZXI6IGZ1bmN0aW9uKGFsd2F5cyA9IGZhbHNlKSB7XG4gICAgICAgIGlmICh0aGlzLmlzRGVsZXRlZCA9PT0gdHJ1ZSAmJiBhbHdheXMgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgICAgICAgdGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgICAgICAgdGhhdCA9IHRoaXM7XG5cbiAgICAgICAgdGV4dC5pbm5lckhUTUwgPSB0aGlzLm5hbWUucmVwbGFjZSgvXFxyP1xcbi9nLCAnPGJyLz4nKTtcbiAgICAgICAgdGV4dC5jbGFzc05hbWUgPSAnY2FyZFRleHQnO1xuXG4gICAgICAgIG5vZGUuaWQgPSAndG9kb18nICsgdGhpcy5pZDtcbiAgICAgICAgbm9kZS5jbGFzc05hbWUgPSAnY2FyZCBjYXJkLTEnO1xuICAgICAgICBub2RlLnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJztcbiAgICAgICAgbm9kZS5zdHlsZS5sZWZ0ID0gdGhpcy54O1xuICAgICAgICBub2RlLnN0eWxlLnRvcCA9IHRoaXMueTtcbiAgICAgICAgbm9kZS5zdHlsZS5jdXJzb3IgPSAnLXdlYmtpdC1ncmFiJztcbiAgICAgICAgbm9kZS5zdHlsZS56SW5kZXggPSB0aGlzLmRlcHRoO1xuICAgICAgICBub2RlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMuY29sb3I7XG5cbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW5Db250YWluZXInKS5hcHBlbmRDaGlsZChub2RlKTtcblxuICAgICAgICBub2RlLmFwcGVuZENoaWxkKGNyZWF0ZURpdigneCcsICdjb250cm9sIHJlbW92ZScpKTtcbiAgICAgICAgLy8gbm9kZS5hcHBlbmRDaGlsZChjcmVhdGVEaXYoJysnLCAnY29udHJvbCB1cCcpKTtcbiAgICAgICAgLy8gbm9kZS5hcHBlbmRDaGlsZChjcmVhdGVEaXYoJy0nLCAnY29udHJvbCBkb3duJykpO1xuICAgICAgICBub2RlLmFwcGVuZENoaWxkKGNyZWF0ZURpdignQycsICdjb250cm9sIGNvcHknKSk7XG4gICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQoY3JlYXRlRGl2KCdkZXB0aDogJyArIHRoaXMuZGVwdGgsICdkZXB0aCcpKTtcbiAgICAgICAgLy8gbm9kZS5hcHBlbmRDaGlsZChjcmVhdGVEaXYodGhpcy5pc0FyY2hpdmVkID8gJ1YnIDogJ08nLCAnaXNBcmNoaXZlZCcpKTtcbiAgICAgICAgbm9kZS5hcHBlbmRDaGlsZChjcmVhdGVEaXYoJ2lkOiAnICsgdGhpcy5pZCwgJ2lkJykpO1xuXG4gICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQodGV4dCk7XG5cbiAgICAgICAgJCgnI3RvZG9fJyArIHRoaXMuaWQpLmRyYWdnYWJsZSh7XG4gICAgICAgICAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBsZXQgY2FyZCA9ICQoJyN0b2RvXycgKyB0aGF0LmlkKTtcblxuICAgICAgICAgICAgICAgIHRoYXQueCA9IGNhcmQuY3NzKCdsZWZ0Jyk7XG4gICAgICAgICAgICAgICAgdGhhdC55ID0gY2FyZC5jc3MoJ3RvcCcpO1xuXG4gICAgICAgICAgICAgICAgcHVic3ViLnB1Yih3aW5kb3cuQ09ORklHLlNFTEVDVF9DQVJELCBbdGhhdC5pZF0pO1xuICAgICAgICAgICAgICAgIHB1YnN1Yi5wdWIod2luZG93LkNPTkZJRy5TQVZFX0NBUkRTKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMubm9kZSA9IG5vZGU7XG5cblxuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuaXNBcmNoaXZlZCkge1xuICAgICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKCdjb21wbGV0ZWQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgZ2V0QmFja2dyb3VuZENvbG9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHJhbmRvbU1DLmdldENvbG9yKHtzaGFkZXM6IFsnMjAwJywgJzMwMCddfSk7XG4gICAgfSxcbiAgICBkZXJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCBub2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvZG9fJyArIHRoaXMuaWQpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbkNvbnRhaW5lcicpLnJlbW92ZUNoaWxkKG5vZGUpO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgdG9nZ2xlQXJjaGl2ZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5pc0FyY2hpdmVkID09PSBmYWxzZSB8fCB0aGlzLmlzQXJjaGl2ZWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5ub2RlLmNsYXNzTGlzdC5yZW1vdmUoJ25vdENvbXBsZXRlZCcpO1xuICAgICAgICAgICAgdm9pZCB0aGlzLm5vZGUub2Zmc2V0V2lkdGg7XG4gICAgICAgICAgICB0aGlzLm5vZGUuY2xhc3NMaXN0LmFkZCgnY29tcGxldGVkJyk7XG4gICAgICAgICAgICB0aGlzLmFyY2hpdmVkQXQgPSArIG5ldyBEYXRlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm5vZGUuY2xhc3NMaXN0LnJlbW92ZSgnY29tcGxldGVkJyk7XG4gICAgICAgICAgICB2b2lkIHRoaXMubm9kZS5vZmZzZXRXaWR0aDtcbiAgICAgICAgICAgIHRoaXMubm9kZS5jbGFzc0xpc3QuYWRkKCdub3RDb21wbGV0ZWQnKTtcbiAgICAgICAgICAgIHRoaXMuYXJjaGl2ZWRBdCA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmlzQXJjaGl2ZWQgPSAhdGhpcy5pc0FyY2hpdmVkO1xuXG4gICAgICAgIHB1YnN1Yi5wdWIod2luZG93LkNPTkZJRy5TQVZFX0NBUkRTKTtcbiAgICB9LFxuICAgIGRlbGV0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuaXNEZWxldGVkID0gdHJ1ZTtcblxuICAgICAgICB0aGlzLmRlcmVuZGVyKCk7XG4gICAgfSxcbiAgICB1bmRlbGV0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuaXNEZWxldGVkID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhcmQ7IiwiY29uc3QgQ2FyZCA9IHJlcXVpcmUoJy4vQ2FyZCcpLFxuICAgIHB1YnN1YiA9IHJlcXVpcmUoJy4uL2xpYi9wdWJzdWInKSxcbiAgICBDT05GSUcgPSByZXF1aXJlKCcuLi9jb25maWcnKTtcblxubGV0IENhcmRNYW5hZ2VyID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmNhcmRzID0gW107XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRDYXJkID0ge2lkOiAtMX07XG4gICAgICAgIHRoaXMuZGVsZXRlZENhcmRzID0gW107XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBhZGRDYXJkOiBmdW5jdGlvbihjYXJkKSB7XG4gICAgICAgIHRoaXMuY2FyZHMucHVzaChjYXJkKTtcbiAgICAgICAgY2FyZC5pZCA9IHRoaXMuY2FyZHMubGVuZ3RoIC0gMTtcblxuICAgICAgICByZXR1cm4gY2FyZDtcbiAgICB9LFxuICAgIHJlbW92ZUNhcmQ6IGZ1bmN0aW9uKGlkKSB7XG4gICAgICAgIHRoaXMuY2FyZHNbaWRdLmRlcmVuZGVyKCk7XG4gICAgICAgIHRoaXMuY2FyZHNbaWRdID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgcmVkcmF3Q2FyZDogZnVuY3Rpb24oY2FyZElkLCB4LCB5KSB7XG4gICAgICAgIGxldCBjYXJkID0gdGhpcy5jYXJkc1tjYXJkSWRdO1xuICAgICAgICBjYXJkLnggPSB4O1xuICAgICAgICBjYXJkLnkgPSB5O1xuXG4gICAgICAgIGNhcmQuZGVyZW5kZXIoKTtcbiAgICAgICAgY2FyZC5yZW5kZXIoKTtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIHNhdmVDYXJkczogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0eXBlb2YoU3RvcmFnZSkgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY2FyZHMnLCBKU09OLnN0cmluZ2lmeSh0aGlzLmNhcmRzKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygneW91IGRvblxcJ3QgaGF2ZSBsb2NhbCBzdG9yYWdlIDooJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnBlcnNpc3RTZWxlY3RlZENhcmQoKTtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGxvYWRDYXJkczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuY2FyZHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjYXJkcycpKTtcbiAgICAgICAgaWYgKHRoaXMuY2FyZHMgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuY2FyZHMgPSBKU09OLnBhcnNlKGF0b2IoQ09ORklHLkRFRkFVTFRfQ09OVEVOVCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5jbGVhckFycmF5KCk7XG5cbiAgICAgICAgdGhpcy5sb2FkU2VsZWN0ZWRDYXJkKCk7XG5cbiAgICAgICAgZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5ibHVyKCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBjbGVhckFycmF5OiBmdW5jdGlvbigpIHtcbiAgICAgICAgbGV0IGk7XG5cbiAgICAgICAgdGhpcy5jYXJkcyA9IHRoaXMuY2FyZHMuZmlsdGVyKGZ1bmN0aW9uKGVsZW0pIHtcbiAgICAgICAgICAgIHJldHVybiBlbGVtICE9PSB1bmRlZmluZWQgJiYgZWxlbSAhPT0gbnVsbDtcbiAgICAgICAgfSk7XG4gICAgICAgIGZvciAoaSBpbiB0aGlzLmNhcmRzKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5jYXJkcy5oYXNPd25Qcm9wZXJ0eShpKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2FyZHNbaV0uaWQgPSBpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICByZVJlbmRlckFsbENhcmRzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5jYXJkcy5mb3JFYWNoKChjYXJkKSA9PiB7XG4gICAgICAgICAgICBjYXJkLmRlcmVuZGVyKCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnJlbmRlckFsbENhcmRzKCk7XG4gICAgfSxcbiAgICByZW5kZXJBbGxDYXJkczogZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5jYXJkcy5mb3JFYWNoKChjYXJkKSA9PiB7XG4gICAgICAgICAgICAgICAgY2FyZC5zZWxlY3RlZCA9IHRoaXMuc2VsZWN0ZWRDYXJkICYmICh0aGlzLnNlbGVjdGVkQ2FyZC5pZCA9PT0gY2FyZC5pZCk7XG4gICAgICAgICAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKGNhcmQsIENhcmQpO1xuICAgICAgICAgICAgICAgIGNhcmQucmVuZGVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBnZXRJbnN0YW5jZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChDYXJkTWFuYWdlci5pbnN0YW5jZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBDYXJkTWFuYWdlci5pbnN0YW5jZSA9IE9iamVjdC5jcmVhdGUoQ2FyZE1hbmFnZXIsIHt9KTtcbiAgICAgICAgICAgIENhcmRNYW5hZ2VyLmluc3RhbmNlLmluaXQoKTtcbiAgICAgICAgICAgIHB1YnN1Yi5zdWIod2luZG93LkNPTkZJRy5TQVZFX0NBUkRTLCBDYXJkTWFuYWdlci5pbnN0YW5jZS5zYXZlQ2FyZHMsIENhcmRNYW5hZ2VyLmluc3RhbmNlKTtcbiAgICAgICAgICAgIHB1YnN1Yi5zdWIod2luZG93LkNPTkZJRy5TRUxFQ1RfQ0FSRCwgQ2FyZE1hbmFnZXIuaW5zdGFuY2Uuc2VsZWN0Q2FyZCwgQ2FyZE1hbmFnZXIuaW5zdGFuY2UpO1xuICAgICAgICAgICAgcHVic3ViLnN1Yih3aW5kb3cuQ09ORklHLlJFUkVOREVSLCBDYXJkTWFuYWdlci5pbnN0YW5jZS5yZVJlbmRlckFsbENhcmRzLCBDYXJkTWFuYWdlci5pbnN0YW5jZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gQ2FyZE1hbmFnZXIuaW5zdGFuY2U7XG5cbiAgICB9LFxuICAgIGV4cG9ydENhcmRzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGJ0b2EoSlNPTi5zdHJpbmdpZnkodGhpcy5jYXJkcykpO1xuICAgIH0sXG4gICAgaW1wb3J0Q2FyZHM6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NhcmRzJywgYXRvYihkYXRhKSk7XG4gICAgICAgIHRoaXMubG9hZENhcmRzKCk7XG4gICAgICAgIHRoaXMucmVuZGVyQWxsQ2FyZHMoKTtcbiAgICB9LFxuICAgIHNlbGVjdENhcmQ6IGZ1bmN0aW9uKGNhcmRJZCkge1xuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZENhcmQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZENhcmQubm9kZS5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRDYXJkID0gdGhpcy5jYXJkc1tjYXJkSWRdO1xuXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRDYXJkLm5vZGUuY2xhc3NMaXN0LmFkZCgnc2VsZWN0ZWQnKTtcblxuICAgICAgICB0aGlzLnBlcnNpc3RTZWxlY3RlZENhcmQoKTtcbiAgICAgICAgZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5ibHVyKCk7XG4gICAgfSxcbiAgICBuZXh0Q2FyZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCBpdCA9ICt0aGlzLnNlbGVjdGVkQ2FyZC5pZCArIDE7XG5cbiAgICAgICAgd2hpbGUgKGl0ICE9PSArdGhpcy5zZWxlY3RlZENhcmQuaWQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNhcmRzW2l0XSAhPT0gdW5kZWZpbmVkICYmIHRoaXMuY2FyZHNbaXRdLmlzRGVsZXRlZCAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCsraXQgPj0gdGhpcy5jYXJkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBpdCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNlbGVjdENhcmQoaXQpO1xuICAgIH0sXG4gICAgcHJldmlvdXNDYXJkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgbGV0IGl0ID0gK3RoaXMuc2VsZWN0ZWRDYXJkLmlkIC0gMTtcblxuICAgICAgICB3aGlsZSAoaXQgIT09ICt0aGlzLnNlbGVjdGVkQ2FyZC5pZCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuY2FyZHNbaXRdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgtLWl0IDw9IDApIHtcbiAgICAgICAgICAgICAgICBpdCA9IHRoaXMuY2FyZHMubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZWxlY3RDYXJkKGl0KTtcbiAgICB9LFxuICAgIHBlcnNpc3RTZWxlY3RlZENhcmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZENhcmQgJiYgdGhpcy5zZWxlY3RlZENhcmQuaWQgPiAtMSkge1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NlbGVjdGVkQ2FyZCcsIHRoaXMuc2VsZWN0ZWRDYXJkLmlkKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgbG9hZFNlbGVjdGVkQ2FyZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCBzZWxlY3RlZENhcmRJZCA9ICtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2VsZWN0ZWRDYXJkJyk7XG5cbiAgICAgICAgaWYgKHNlbGVjdGVkQ2FyZElkICE9PSB1bmRlZmluZWQgJiYgc2VsZWN0ZWRDYXJkSWQgPiAtMSkge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZENhcmQgPSB0aGlzLmNhcmRzW3NlbGVjdGVkQ2FyZElkXTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgZGVsZXRlQ2FyZDogZnVuY3Rpb24oY2FyZCkge1xuICAgICAgICB0aGlzLmRlbGV0ZWRDYXJkcy5wdXNoKGNhcmQpO1xuXG4gICAgICAgIGNhcmQuZGVsZXRlKCk7XG4gICAgfSxcbiAgICB1bmRlbGV0ZUxhc3RDYXJkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuZGVsZXRlZENhcmRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5kZWxldGVkQ2FyZHMuc3BsaWNlKHRoaXMuZGVsZXRlZENhcmRzLmxlbmd0aCAtMSlbMF0udW5kZWxldGUoKTtcblxuICAgICAgICB0aGlzLnNhdmVDYXJkcygpO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FyZE1hbmFnZXI7IiwibGV0IGNhcmRNYW5hZ2VyID0gcmVxdWlyZSgnLi9tb2RlbHMvQ2FyZE1hbmFnZXInKS5nZXRJbnN0YW5jZSgpO1xuXG5mdW5jdGlvbiBjcmVhdGVEaXYodGV4dCwgY2xhc3NOYW1lKSB7XG4gICAgbGV0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRpdi5pbm5lckhUTUwgPSB0ZXh0O1xuICAgIGRpdi5zdHlsZS5mbG9hdCA9IFwicmlnaHRcIjtcbiAgICBkaXYuc3R5bGUuY3Vyc29yID0gXCJwb2ludGVyXCI7XG4gICAgZGl2LnN0eWxlLndpZHRoID0gXCJhdXRvXCI7XG4gICAgZGl2LnN0eWxlLnRleHRBbGlnbiA9IFwiY2VudGVyXCI7XG4gICAgZGl2LnN0eWxlLm1hcmdpbiA9IFwiMCAzcHhcIjtcblxuICAgIGlmIChjbGFzc05hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBkaXYuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICAgIH1cblxuICAgIHJldHVybiBkaXY7XG59XG5cbmZ1bmN0aW9uIGNvcHlTZWxlY3Rpb25UZXh0KCkge1xuICAgIGxldCBjb3B5c3VjY2VzczsgLy8gbGV0IHRvIGNoZWNrIHdoZXRoZXIgZXhlY0NvbW1hbmQgc3VjY2Vzc2Z1bGx5IGV4ZWN1dGVkXG4gICAgdHJ5IHtcbiAgICAgICAgY29weXN1Y2Nlc3MgPSBkb2N1bWVudC5leGVjQ29tbWFuZChcImNvcHlcIik7IC8vIHJ1biBjb21tYW5kIHRvIGNvcHkgc2VsZWN0ZWQgdGV4dCB0byBjbGlwYm9hcmRcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvcHlzdWNjZXNzID0gZmFsc2VcbiAgICB9XG4gICAgcmV0dXJuIGNvcHlzdWNjZXNzXG59XG5cbmZ1bmN0aW9uIHNlbGVjdFRleHQoZWxlbWVudCkge1xuICAgIGxldCBkb2MgPSBkb2N1bWVudFxuICAgICAgICAsIHRleHQgPSBlbGVtZW50XG4gICAgICAgICwgcmFuZ2UsIHNlbGVjdGlvblxuICAgIDtcbiAgICBpZiAoZG9jLmJvZHkuY3JlYXRlVGV4dFJhbmdlKSB7XG4gICAgICAgIHJhbmdlID0gZG9jdW1lbnQuYm9keS5jcmVhdGVUZXh0UmFuZ2UoKTtcbiAgICAgICAgcmFuZ2UubW92ZVRvRWxlbWVudFRleHQodGV4dCk7XG4gICAgICAgIHJhbmdlLnNlbGVjdCgpO1xuICAgIH0gZWxzZSBpZiAod2luZG93LmdldFNlbGVjdGlvbikge1xuICAgICAgICBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICAgIHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtcbiAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKHRleHQpO1xuICAgICAgICBzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgIHNlbGVjdGlvbi5hZGRSYW5nZShyYW5nZSk7XG4gICAgICAgIHJldHVybiBzZWxlY3Rpb247XG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZXRQYXJlbnRDYXJkSWQoY29udGV4dCkge1xuICAgIGlmIChjb250ZXh0LnBhcmVudEVsZW1lbnQgPT09IG51bGwpIHJldHVybjtcbiAgICByZXR1cm4gcGFyc2VJbnQoY29udGV4dC5wYXJlbnRFbGVtZW50LmlkLnNwbGl0KFwiX1wiKVsxXSk7XG59XG5cbmZ1bmN0aW9uIGdldFNvbWV0aGluZ0J5Y2xhc3NOYW1lKGNvbnRleHQsIGNsYXNzbmFtZSkge1xuICAgIGxldCByZXMgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoY2xhc3NuYW1lKTtcblxuICAgIGlmIChyZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJlcyA9IGNvbnRleHQucGFyZW50RWxlbWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGNsYXNzbmFtZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlcztcbn1cblxuZnVuY3Rpb24gY2hhbmdlRGVwdGgoY2FyZElkLCBpbmNyZW1lbnQpIHtcbiAgICBsZXQgZGVwdGggPSBjYXJkTWFuYWdlci5jYXJkc1tjYXJkSWRdLmRlcHRoICsgaW5jcmVtZW50O1xuXG4gICAgdGhpcy5zdHlsZS56SW5kZXggPSBkZXB0aDtcbiAgICBjYXJkTWFuYWdlci5jYXJkc1tjYXJkSWRdLmRlcHRoID0gZGVwdGg7XG5cbiAgICBsZXQgZWxlbSA9IGdldFNvbWV0aGluZ0J5Y2xhc3NOYW1lKHRoaXMsICdkZXB0aCcpO1xuICAgIGVsZW1bMF0uaW5uZXJIVE1MID0gZGVwdGg7XG59XG5cbmZ1bmN0aW9uIHNldERlcHRoKGNhcmRJZCwgZGVwdGgpIHtcbiAgICB0aGlzLnN0eWxlLnpJbmRleCA9IGRlcHRoO1xuICAgIGNhcmRNYW5hZ2VyLmNhcmRzW2NhcmRJZF0uZGVwdGggPSBkZXB0aDtcblxuICAgIGxldCBlbGVtID0gZ2V0U29tZXRoaW5nQnljbGFzc05hbWUodGhpcywgJ2RlcHRoJyk7XG4gICAgZWxlbVswXS5pbm5lckhUTUwgPSBkZXB0aDtcbn1cblxuZnVuY3Rpb24gZ2V0Q2FyZEhUTUxCeUlkKG1haW5Db250YWluZXIsIGlkKSB7XG4gICAgcmV0dXJuIG1haW5Db250YWluZXIuZ2V0RWxlbWVudEJ5SWQoJ3RvZG9fJyArIGlkKTtcbn1cblxuLy8gUFJPVE9UWVBFU1xuXG4vKlxuICogUmV0dXJucyB0aGUgc2l6ZSBvZiBhbiBhcnJheVxuICovXG5BcnJheS5wcm90b3R5cGUuc2l6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmZpbHRlcihmdW5jdGlvbihhKSB7XG4gICAgICAgIHJldHVybiBhICE9PSB1bmRlZmluZWQ7XG4gICAgfSkubGVuZ3RoXG59O1xuXG4vKlxuICogUmV0dXJucyB0aGUgc2l6ZSBvZiBhbiBvYmplY3RcbiAqL1xuT2JqZWN0LnNpemUgPSBmdW5jdGlvbihvYmopIHtcbiAgICBsZXQgc2l6ZSA9IDAsIGtleSA9IFwiXCI7XG5cbiAgICBmb3IgKGtleSBpbiBvYmopIHtcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSBzaXplKys7XG4gICAgfVxuICAgIHJldHVybiBzaXplO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlRGl2OiBjcmVhdGVEaXYsXG4gICAgY29weVNlbGVjdGlvblRleHQ6IGNvcHlTZWxlY3Rpb25UZXh0LFxuICAgIHNlbGVjdFRleHQ6IHNlbGVjdFRleHQsXG4gICAgZ2V0UGFyZW50Q2FyZElkOiBnZXRQYXJlbnRDYXJkSWQsXG4gICAgY2hhbmdlRGVwdGg6IGNoYW5nZURlcHRoLFxuICAgIHNldERlcHRoOiBzZXREZXB0aCxcbiAgICBnZXRDYXJkSFRNTEJ5SWQ6IGdldENhcmRIVE1MQnlJZFxufTsiXX0="}