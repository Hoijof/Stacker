{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/murmurhash-js/index.js","node_modules/murmurhash-js/murmurhash2_gc.js","node_modules/murmurhash-js/murmurhash3_gc.js","node_modules/random-material-color/dist/randomColor.js","src/js/config.js","src/js/lib/keyHandler.js","src/js/lib/pubsub.js","src/js/main.js","src/js/models/Card.js","src/js/models/CardManager.js","src/js/prototypes.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var murmur3 = require(\"./murmurhash3_gc.js\")\nvar murmur2 = require(\"./murmurhash2_gc.js\")\n\nmodule.exports = murmur3\nmodule.exports.murmur3 = murmur3\nmodule.exports.murmur2 = murmur2\n","/**\n * JS Implementation of MurmurHash2\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n */\n\nfunction murmurhash2_32_gc(str, seed) {\n  var\n    l = str.length,\n    h = seed ^ l,\n    i = 0,\n    k;\n  \n  while (l >= 4) {\n  \tk = \n  \t  ((str.charCodeAt(i) & 0xff)) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 8) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 16) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 24);\n    \n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    k ^= k >>> 24;\n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n\th = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n    l -= 4;\n    ++i;\n  }\n  \n  switch (l) {\n  case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n  case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n  case 1: h ^= (str.charCodeAt(i) & 0xff);\n          h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  }\n\n  h ^= h >>> 13;\n  h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  h ^= h >>> 15;\n\n  return h >>> 0;\n}\n\nif(typeof module !== undefined) {\n  module.exports = murmurhash2_32_gc\n}\n","/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash \n */\n\nfunction murmurhash3_32_gc(key, seed) {\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\t\n\tremainder = key.length & 3; // key.length % 4\n\tbytes = key.length - remainder;\n\th1 = seed;\n\tc1 = 0xcc9e2d51;\n\tc2 = 0x1b873593;\n\ti = 0;\n\t\n\twhile (i < bytes) {\n\t  \tk1 = \n\t  \t  ((key.charCodeAt(i) & 0xff)) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\t\t\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\t\n\tk1 = 0;\n\t\n\tswitch (remainder) {\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\t\t\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\t\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nif(typeof module !== \"undefined\") {\n  module.exports = murmurhash3_32_gc\n}","var defaultPalette={50:[\"#FFEBEE\",\"#FCE4EC\",\"#F3E5F5\",\"#EDE7F6\",\"#E8EAF6\",\"#E3F2FD\",\"#E1F5FE\",\"#E0F7FA\",\"#E0F2F1\",\"#E8F5E9\",\"#F1F8E9\",\"#F9FBE7\",\"#FFFDE7\",\"#FFF8E1\",\"#FFF3E0\",\"#FBE9E7\",\"#EFEBE9\",\"#FAFAFA\",\"#ECEFF1\"],100:[\"#FFCDD2\",\"#F8BBD0\",\"#E1BEE7\",\"#D1C4E9\",\"#C5CAE9\",\"#BBDEFB\",\"#B3E5FC\",\"#B2EBF2\",\"#B2DFDB\",\"#C8E6C9\",\"#DCEDC8\",\"#F0F4C3\",\"#FFF9C4\",\"#FFECB3\",\"#FFE0B2\",\"#FFCCBC\",\"#D7CCC8\",\"#F5F5F5\",\"#CFD8DC\"],200:[\"#EF9A9A\",\"#F48FB1\",\"#CE93D8\",\"#B39DDB\",\"#9FA8DA\",\"#90CAF9\",\"#81D4FA\",\"#80DEEA\",\"#80CBC4\",\"#A5D6A7\",\"#C5E1A5\",\"#E6EE9C\",\"#FFF59D\",\"#FFE082\",\"#FFCC80\",\"#FFAB91\",\"#BCAAA4\",\"#EEEEEE\",\"#B0BEC5\"],300:[\"#E57373\",\"#F06292\",\"#BA68C8\",\"#9575CD\",\"#7986CB\",\"#64B5F6\",\"#4FC3F7\",\"#4DD0E1\",\"#4DB6AC\",\"#81C784\",\"#AED581\",\"#DCE775\",\"#FFF176\",\"#FFD54F\",\"#FFB74D\",\"#FF8A65\",\"#A1887F\",\"#E0E0E0\",\"#90A4AE\"],400:[\"#EF5350\",\"#EC407A\",\"#AB47BC\",\"#7E57C2\",\"#5C6BC0\",\"#42A5F5\",\"#29B6F6\",\"#26C6DA\",\"#26A69A\",\"#66BB6A\",\"#9CCC65\",\"#D4E157\",\"#FFEE58\",\"#FFCA28\",\"#FFA726\",\"#FF7043\",\"#8D6E63\",\"#BDBDBD\",\"#78909C\"],500:[\"#F44336\",\"#E91E63\",\"#9C27B0\",\"#673AB7\",\"#3F51B5\",\"#2196F3\",\"#03A9F4\",\"#00BCD4\",\"#009688\",\"#4CAF50\",\"#8BC34A\",\"#CDDC39\",\"#FFEB3B\",\"#FFC107\",\"#FF9800\",\"#FF5722\",\"#795548\",\"#9E9E9E\",\"#607D8B\"],600:[\"#E53935\",\"#D81B60\",\"#8E24AA\",\"#5E35B1\",\"#3949AB\",\"#1E88E5\",\"#039BE5\",\"#00ACC1\",\"#00897B\",\"#43A047\",\"#7CB342\",\"#C0CA33\",\"#FDD835\",\"#FFB300\",\"#FB8C00\",\"#F4511E\",\"#6D4C41\",\"#757575\",\"#546E7A\"],700:[\"#D32F2F\",\"#C2185B\",\"#7B1FA2\",\"#512DA8\",\"#303F9F\",\"#1976D2\",\"#0288D1\",\"#0097A7\",\"#00796B\",\"#388E3C\",\"#689F38\",\"#AFB42B\",\"#FBC02D\",\"#FFA000\",\"#F57C00\",\"#E64A19\",\"#5D4037\",\"#616161\",\"#455A64\"],800:[\"#C62828\",\"#AD1457\",\"#6A1B9A\",\"#4527A0\",\"#283593\",\"#1565C0\",\"#0277BD\",\"#00838F\",\"#00695C\",\"#2E7D32\",\"#558B2F\",\"#9E9D24\",\"#F9A825\",\"#FF8F00\",\"#EF6C00\",\"#D84315\",\"#4E342E\",\"#424242\",\"#37474F\"],900:[\"#B71C1C\",\"#880E4F\",\"#4A148C\",\"#311B92\",\"#1A237E\",\"#0D47A1\",\"#01579B\",\"#006064\",\"#004D40\",\"#1B5E20\",\"#33691E\",\"#827717\",\"#F57F17\",\"#FF6F00\",\"#E65100\",\"#BF360C\",\"#3E2723\",\"#212121\",\"#263238\"],A100:[\"#FF8A80\",\"#FF80AB\",\"#EA80FC\",\"#B388FF\",\"#8C9EFF\",\"#82B1FF\",\"#80D8FF\",\"#84FFFF\",\"#A7FFEB\",\"#B9F6CA\",\"#CCFF90\",\"#F4FF81\",\"#FFFF8D\",\"#FFE57F\",\"#FFD180\",\"#FF9E80\"],A200:[\"#FF5252\",\"#FF4081\",\"#E040FB\",\"#7C4DFF\",\"#536DFE\",\"#448AFF\",\"#40C4FF\",\"#18FFFF\",\"#64FFDA\",\"#69F0AE\",\"#B2FF59\",\"#EEFF41\",\"#FFFF00\",\"#FFD740\",\"#FFAB40\",\"#FF6E40\"],A400:[\"#FF1744\",\"#F50057\",\"#D500F9\",\"#651FFF\",\"#3D5AFE\",\"#2979FF\",\"#00B0FF\",\"#00E5FF\",\"#1DE9B6\",\"#00E676\",\"#76FF03\",\"#C6FF00\",\"#FFEA00\",\"#FFC400\",\"#FF9100\",\"#FF3D00\"],A700:[\"#D50000\",\"#C51162\",\"#AA00FF\",\"#6200EA\",\"#304FFE\",\"#2962FF\",\"#0091EA\",\"#00B8D4\",\"#00BFA5\",\"#00C853\",\"#64DD17\",\"#AEEA00\",\"#FFD600\",\"#FFAB00\",\"#FF6D00\",\"#DD2C00\"]},murmur=require(\"murmurhash-js\");module.exports=function(){var F=[],E={shades:[\"500\"],palette:defaultPalette,text:null,ignoreColors:[]},C=function(C){C||(C=E),C.palette||(C.palette=defaultPalette),C.shades||(C.shades=[\"500\"]);for(var B,D=F.length,t=0;D>t;t++)if(C.text&&F[t].text===C.text)return F[t].color;return B=A(C),C.text&&F.push({text:C.text,color:B}),B},A=function(F){var E=F.shades[B(F.shades.length)],C=\"\";for(var A in F.palette)F.palette.hasOwnProperty(A)&&A===E&&(C=F.text?F.palette[A][D(F.text,F.palette[A].length)]:F.palette[A][B(F.palette[A].length)]);return C},B=function(F){return Math.floor(Math.random()*F)},D=function(F,E){var C=murmur.murmur3(F)/1e10;return.1>C&&(C=10*C),Math.floor(C*E)};return{getColor:C}}();","module.exports = {\n  SAVE_CARDS: 'SAVE_CARDS',\n  SELECT_CARD: 'SELECT_CARD',\n  RERENDER: 'RERENDER',\n  ASCII: {\n    ESCAPE_KEY: 27,\n    TAB_KEY: 9,\n    C_KEY: 67,\n    D_KEY: 68,\n    E_KEY: 69,\n    PLUS_KEY: 187,\n    MINUS_KEY: 189,\n    DOT_KEY: 190,\n    A_KEY: 65,\n    I_KEY: 73,\n    R_KEY: 82,\n    Z_KEY: 90,\n    CMD_KEY: 91,\n    KEYS_ARRAY: [27, 9, 67, 68, 69, 187, 189, 190, 65, 73, 82, 90, 91],\n  },\n  DEFAULT_CONTENT: 'W3siaWQiOiIwIiwibmFtZSI6IlVzZSB0YWIgYW5kIHNoaWZ0IHRhYiB0byBjaXJjbGUgYmV0d2VlbiBjYXJkcyA6RFxuXG5EcmFnZ2luZyBvciBjbGlja2luZyB0aGVtIHdpbGwgYWxzbyBtYXJrIHRoZW0gYXMgc2VsZWN0ZWQiLCJkZXB0aCI6NSwieCI6IjEyM3B4IiwieSI6IjU5cHgiLCJjb2xvciI6IiM0REQwRTEiLCJzZWxlY3RlZCI6dHJ1ZSwibm9kZSI6eyJqUXVlcnkxNzIwODI0MDE1NTE1MTY1MDg3OSI6NH19LHsiaWQiOiIxIiwibmFtZSI6Ik9uIGEgbWFya2VkIGNhcmQgdXNlOlxuJ2MnIHRvIGNvcHkgdGhlIGNvbnRlbnRcbidkJyB0byBkZWxldGUgaXRcbidlJyB0byBlZGl0IGl0XG4nKycgYW5kICctJyB0byBtb2RpZnkgdGhlIGRlcHRoIG9mIHRoZSBjYXJkIGFuZCAnLicgdG8gcmVzZXQgaXRcbidhJyB0byBhcmNoaXZlIG9yIGRlYXJjaGl2ZSBkZSBjYXJkXG4naScgdG8gZm9jdXMgb24gdGhlIGFkZCBuZXcgY2FyZCBpbnB1dCIsImRlcHRoIjo2LCJ4IjoiMzQycHgiLCJ5IjoiNTRweCIsImNvbG9yIjoiIzgwQ0JDNCIsInNlbGVjdGVkIjpmYWxzZSwibm9kZSI6eyJqUXVlcnkxNzIwODI0MDE1NTE1MTY1MDg3OSI6N319LHsiaWQiOiIyIiwibmFtZSI6IldoaWxlIGVkaXRpbmcgdXNlIHNoaWZ0ICsgZW50ZXIgdG8gXG5pbnNlcnRcbmFcbmxpbmVcbmJyZWFrXG46RCIsImRlcHRoIjo1LCJ4IjoiMTIxcHgiLCJ5IjoiMjczcHgiLCJjb2xvciI6IiM2NEI1RjYiLCJzZWxlY3RlZCI6ZmFsc2UsIm5vZGUiOnsialF1ZXJ5MTcyMDgyNDAxNTUxNTE2NTA4NzkiOjZ9fV0=',\n  VERSION: '0.5.0',\n};","const CONFIG = require('../config');\n\nlet cardManager,\n    Card = require('../models/Card');\n\nlet mainContainer,\n    input,\n    editContainer,\n    editInput,\n    importContainer,\n    importInput,\n    exportContainer,\n    exportContent,\n    importButton;\n\n\nfunction init(options) {\n    cardManager = options.cardManager;\n    bindings();\n}\n\nfunction bindings() {\n    mainContainer = $('#mainContainer');\n    input = document.querySelector('#formContainer input');\n    editContainer = document.getElementById('editContainer');\n    editInput = editContainer.getElementsByClassName('textarea')[0];\n    importContainer = document.getElementById('importContainer');\n    importInput = importContainer.getElementsByClassName('input')[0];\n    importButton = importContainer.getElementsByClassName('button')[0];\n    exportContainer = document.getElementById('exportContainer');\n    exportContent = exportContainer.getElementsByTagName('div')[0];\n\n\n    window.addEventListener('keyup', keyHandlerUp, false);\n    window.addEventListener('keydown', keyHandlerDown, false);\n    input.addEventListener('keydown', mainInputKeyEvent);\n    editInput.addEventListener('keydown', editInputKeyEvent);\n    editContainer.addEventListener('click', hideEditContainer);\n    editInput.addEventListener('click', stopPropagation);\n    /*\n     On double click edit the card\n     */\n    mainContainer.on('dblclick', 'div', doubleClickHandler);\n    /*\n     On click perform the card\n     */\n    mainContainer.on('click', 'div', cardClickEvents);\n    mainContainer.on('click', 'div > div', cardMenuEvents);\n    document.getElementById('export').addEventListener('click', exportCards);\n    document.getElementById('import').addEventListener('click', showImporter);\n    importButton.addEventListener('click', loadImportCardsCode);\n    importContainer.addEventListener('click', hideImportContainer);\n    importInput.addEventListener('keydown', importInputKeyEvent);\n    importInput.addEventListener('click', stopPropagation);\n    exportContainer.addEventListener('click', hideExportContainer);\n    exportContent.addEventListener('click', stopPropagation);\n}\n\nfunction keyHandlerDown(e) {\n\n    if (e.keyCode === CONFIG.ASCII.TAB_KEY) {\n        document.activeElement.blur();\n        if (event.shiftKey) {\n            cardManager.previousCard();\n        } else {\n            cardManager.nextCard();\n        }\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n    } else if (e.keyCode === CONFIG.ASCII.CMD_KEY) {\n        window.cmdPress = true;\n    }\n}\n\nfunction keyHandlerUp(e) {\n    console.log(e.keyCode);\n    if (document.activeElement !== document.body || CONFIG.ASCII.KEYS_ARRAY.indexOf(e.keyCode) === -1) {\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n\n    switch (e.keyCode) {\n        case CONFIG.ASCII.C_KEY:\n            if (event.ctrlKey || window.cmdPress) {\n                let elem = cardManager.selectedCard.node,\n                    selection;\n\n                selection = selectText(elem.getElementsByClassName('cardText')[0]);\n                copySelectionText();\n                selection.empty();\n            }\n\n            break;\n        case CONFIG.ASCII.D_KEY:\n            if (event.ctrlKey || window.cmdPress) {\n                let card = cardManager.selectedCard;\n                cardManager.nextCard();\n\n                cardManager.deleteCard(card);\n\n                cardManager.saveCards();\n            }\n            break;\n        case CONFIG.ASCII.E_KEY:\n            if (event.ctrlKey || window.cmdPress) {\n                doubleClickHandler.apply(cardManager.selectedCard.node);\n            }\n            break;\n        case CONFIG.ASCII.A_KEY:\n            if (event.ctrlKey || window.cmdPress) {\n                cardManager.selectedCard.toggleArchived();\n            }\n            break;\n        case CONFIG.ASCII.I_KEY:\n            if (event.ctrlKey || window.cmdPress) {\n                // input.focus();\n                createCard();\n            }\n            break;\n        case CONFIG.ASCII.PLUS_KEY:\n            changeDepth.apply(cardManager.selectedCard.node, [cardManager.selectedCard.id, 1]);\n            break;\n        case CONFIG.ASCII.MINUS_KEY:\n            changeDepth.apply(cardManager.selectedCard.node, [cardManager.selectedCard.id, -1]);\n            break;\n        case CONFIG.ASCII.DOT_KEY:\n            setDepth.apply(cardManager.selectedCard.node, [cardManager.selectedCard.id, 5]);\n            break;\n        case CONFIG.ASCII.R_KEY:\n            cardManager.selectedCard.color = cardManager.selectedCard.getBackgroundColor();\n            cardManager.selectedCard.derender();\n            cardManager.selectedCard.render();\n\n            cardManager.saveCards();\n            break;\n        case CONFIG.ASCII.Z_KEY:\n            if (event.ctrlKey || window.cmdPress) {\n                cardManager.undeleteLastCard();\n            }\n            break;\n        case CONFIG.ASCII.CMD_KEY:\n            window.cmdPress = false;\n    }\n}\n\nfunction hideExportContainer() {\n    exportContainer.style.display = 'none';\n}\n\nfunction hideEditContainer() {\n    editContainer.style.display = 'none';\n}\n\nfunction hideImportContainer() {\n    importContainer.style.display = 'none';\n}\n\nfunction stopPropagation(e) {\n    e.stopPropagation();\n}\n\nfunction mainInputKeyEvent(event) {\n    let card;\n\n    if (event.keyCode === 13) {\n        card = cardManager.addCard(Object.create(Card, {}).init(input.value));\n        card.render();\n        this.value = '';\n        cardManager.saveCards();\n        cardManager.selectCard(card.id);\n    }\n}\n\nfunction editInputKeyEvent(event) {\n    event.stopPropagation();\n    let card;\n    if (event.keyCode === 13 && event.shiftKey) return;\n    if (event.keyCode === 13) {\n        card = cardManager.cards[editContainer.cardId];\n        card.name = editInput.value;\n        card.derender();\n        card.render();\n        this.value = '';\n        cardManager.saveCards();\n        hideEditContainer();\n    } else if (event.keyCode === 27) {\n        hideEditContainer();\n    }\n\n}\n\nfunction importInputKeyEvent(event) {\n    if (event.keyCode === 27) {\n        hideImportContainer();\n    }\n}\n\nfunction doubleClickHandler() {\n    let elem = this.querySelector('.cardText'),\n        cardId,\n        card;\n\n    if (this.id === '') {\n        cardId = parseInt(this.parentElement.id.split('_')[1]);\n    } else {\n        cardId = parseInt(this.id.split('_')[1]);\n    }\n\n    card = cardManager.cards[cardId];\n\n    editInput.value = card.name;\n    editContainer.cardId = cardId;\n    editContainer.style.display = 'block';\n    editInput.style.top = card.y;\n    editInput.style.left = card.x;\n    editInput.style['padding-top'] = '23px';\n    editInput.focus();\n}\n\nfunction cardClickEvents(event) {\n    let elem = this.querySelector('.cardText'),\n        cardId,\n        card;\n\n    if (this.id === \"\") {\n        cardId = parseInt(this.parentElement.id.split('_')[1]);\n    } else {\n        cardId = parseInt(this.id.split('_')[1]);\n    }\n\n    card = cardManager.cards[cardId];\n\n    if (card === undefined) return;\n\n    cardManager.selectCard(card.id);\n\n    if (event.ctrlKey) {\n    }\n    if (event.altKey) {\n        this.querySelector('.copy').click();\n    }\n    if (event.shiftKey) {\n\n    }\n}\n\nfunction cardMenuEvents() {\n    let option = $(this).html(),\n        selection,\n        cardId = getParentCardId(this);\n\n    switch (option) {\n        case '+':\n            changeDepth.apply(this, [cardId, 1]);\n            break;\n        case '-':\n            changeDepth.apply(this, [cardId, -1]);\n            break;\n        case 'C':\n            selection = selectText(this.parentElement.getElementsByClassName('cardText')[0]);\n            copySelectionText();\n            selection.empty();\n            break;\n        case 'x':\n            cardManager.deleteCard(cardManager.cards[cardId]);\n            break;\n        case 'V':\n        case 'O':\n            cardManager.cards[cardId].toggleArchived();\n    }\n    cardManager.saveCards();\n}\n\nfunction exportCards() {\n    exportContainer.style.display = 'block';\n    exportContent.innerHTML = cardManager.exportCards();\n    selection = selectText(exportContent);\n    copySelectionText();\n    selection.empty();\n}\n\nfunction loadImportCardsCode() {\n    let data = importInput.value;\n    cardManager.importCards(data);\n    importContainer.style.display = 'none';\n}\n\nfunction showImporter() {\n    importContainer.style.display = 'block';\n    importInput.focus();\n}\n\nfunction createCard() {\n    const card = cardManager.addCard(Object.create(Card, {}).init(''));\n    card.render();\n    cardManager.selectCard(card.id);\n\n    // and now we autoedit :D\n    doubleClickHandler.apply(card.node);\n}\n\nmodule.exports = {\n    init: init\n};","\nvar subs = {};\n\n\nfunction pub(name, params) {\n  subs[name].forEach(function(elem) {\n    elem.callback.apply(elem.context, params);\n  });\n}\n\nfunction sub(name, callback, context) {\n  if (subs[name] === undefined) {\n    subs[name] = [];\n  }\n\n  subs[name].push({\n    callback: callback,\n    context: context\n  });\n}\n\n\nmodule.exports = {\n  pub: pub,\n  sub: sub\n};","window.CONFIG = require('./config.js');\n\nlet keyHandler = require('./lib/keyHandler'),\n  cardManager = require('./models/CardManager').getInstance(),\n  pubsub = require('./lib/pubsub');\n\nwindow.cm = {\n  cardManager: cardManager\n};\n\nObject.assign(window, require('./prototypes'));\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  'strict mode';\n\n  keyHandler.init({\n    cardManager: cardManager\n  });\n\n  cardManager.loadCards();\n  cardManager.renderAllCards();\n});\n","let pubsub = require('../lib/pubsub'),\n    randomMC = require('random-material-color');\n\n\nlet Card = {\n    init: function(name) {\n        this.id = -1;\n        this.name = name;\n        this.depth = 5;\n        this.x = 100;\n        this.y = 100;\n        this.color = this.getBackgroundColor();\n        this.selected = false;\n        this.isArchived = false;\n        this.isDeleted = false;\n        this.createdAt = + new Date();\n        this.archivedAt = null;\n\n        return this;\n    },\n    render: function(always = false) {\n        if (this.isDeleted === true && always === false) {\n            return;\n        }\n\n        let node = document.createElement('div'),\n            text = document.createElement('div'),\n            link = this.findLink(),\n            that = this;\n\n        text.innerHTML = this.name.replace(/\\r?\\n/g, '<br/>');\n        text.className = 'cardText';\n\n        node.id = 'todo_' + this.id;\n        node.className = 'card card-1';\n        node.style.position = 'fixed';\n        node.style.left = this.x;\n        node.style.top = this.y;\n        node.style.cursor = '-webkit-grab';\n        node.style.zIndex = this.depth;\n        node.style.backgroundColor = this.color;\n\n        document.getElementById('mainContainer').appendChild(node);\n\n        node.appendChild(createDiv('x', 'control remove'));\n        // node.appendChild(createDiv('+', 'control up'));\n        // node.appendChild(createDiv('-', 'control down'));\n        node.appendChild(createDiv('C', 'control copy'));\n        node.appendChild(createDiv('depth: ' + this.depth, 'depth'));\n        // node.appendChild(createDiv(this.isArchived ? 'V' : 'O', 'isArchived'));\n        node.appendChild(createDiv('id: ' + this.id, 'id'));\n        if (link) {\n            node.appendChild(createDiv(`<a target=\"_blank\" href=\"${link}\">Link!</a>`, 'link'));\n        }\n\n        node.appendChild(text);\n\n        $('#todo_' + this.id).draggable({\n            stop: function() {\n                let card = $('#todo_' + that.id);\n\n                that.x = card.css('left');\n                that.y = card.css('top');\n\n                pubsub.pub(window.CONFIG.SELECT_CARD, [that.id]);\n                pubsub.pub(window.CONFIG.SAVE_CARDS);\n            },\n        });\n\n        this.node = node;\n\n\n        if (this.selected === true) {\n            node.classList.add('selected');\n        }\n\n        if (this.isArchived) {\n            node.classList.add('completed');\n        }\n\n        return this;\n    },\n    getBackgroundColor: function() {\n        return randomMC.getColor({shades: ['200', '300']});\n    },\n    derender: function() {\n        let node = document.getElementById('todo_' + this.id);\n        document.getElementById('mainContainer').removeChild(node);\n\n        return this;\n    },\n    toggleArchived: function() {\n        if (this.isArchived === false || this.isArchived === undefined) {\n            this.node.classList.remove('notCompleted');\n            void this.node.offsetWidth;\n            this.node.classList.add('completed');\n            this.archivedAt = + new Date();\n        } else {\n            this.node.classList.remove('completed');\n            void this.node.offsetWidth;\n            this.node.classList.add('notCompleted');\n            this.archivedAt = null;\n        }\n\n        this.isArchived = !this.isArchived;\n\n        pubsub.pub(window.CONFIG.SAVE_CARDS);\n    },\n    delete: function() {\n        this.isDeleted = true;\n\n        this.derender();\n    },\n    undelete: function() {\n        this.isDeleted = false;\n\n        this.render();\n    },\n    findLink: function() {\n        const regex = /(https?:\\/\\/[^\\s]+|www.[^\\s]+)/;\n        const link = regex.exec(this.name);\n\n        if (link) {\n            return link[0];\n        }\n    }\n};\n\nmodule.exports = Card;","const Card = require('./Card'),\n    pubsub = require('../lib/pubsub'),\n    CONFIG = require('../config');\n\nlet CardManager = {\n    init: function() {\n        this.cards = [];\n        this.selectedCard = {id: -1};\n        this.deletedCards = [];\n\n        return this;\n    },\n    addCard: function(card) {\n        this.cards.push(card);\n        card.id = this.cards.length - 1;\n\n        return card;\n    },\n    removeCard: function(id) {\n        this.cards[id].derender();\n        this.cards[id] = undefined;\n\n        return this;\n    },\n    redrawCard: function(cardId, x, y) {\n        let card = this.cards[cardId];\n        card.x = x;\n        card.y = y;\n\n        card.derender();\n        card.render();\n\n        return this;\n    },\n    saveCards: function() {\n        if (typeof(Storage) !== 'undefined') {\n            localStorage.setItem('cards', JSON.stringify(this.cards));\n        } else {\n            console.log('you don\\'t have local storage :(');\n        }\n\n        this.persistSelectedCard();\n\n        return this;\n    },\n    loadCards: function() {\n        this.cards = JSON.parse(localStorage.getItem('cards'));\n        if (this.cards === null) {\n            this.cards = JSON.parse(atob(CONFIG.DEFAULT_CONTENT));\n        }\n\n        this.clearArray();\n\n        this.loadSelectedCard();\n\n        document.activeElement.blur();\n\n        return this;\n    },\n    clearArray: function() {\n        let i;\n\n        this.cards = this.cards.filter(function(elem) {\n            return elem !== undefined && elem !== null;\n        });\n        for (i in this.cards) {\n            if (this.cards.hasOwnProperty(i)) {\n                this.cards[i].id = i;\n            }\n        }\n\n        return this;\n    },\n    reRenderAllCards: function() {\n        this.cards.forEach((card) => {\n            card.derender();\n        });\n        this.renderAllCards();\n    },\n    renderAllCards: function() {\n\n        this.cards.forEach((card) => {\n                card.selected = this.selectedCard && (this.selectedCard.id === card.id);\n                Object.setPrototypeOf(card, Card);\n                card.render();\n            }\n        );\n\n        return this;\n    },\n    getInstance: function() {\n        if (CardManager.instance === undefined) {\n            CardManager.instance = Object.create(CardManager, {});\n            CardManager.instance.init();\n            pubsub.sub(window.CONFIG.SAVE_CARDS, CardManager.instance.saveCards, CardManager.instance);\n            pubsub.sub(window.CONFIG.SELECT_CARD, CardManager.instance.selectCard, CardManager.instance);\n            pubsub.sub(window.CONFIG.RERENDER, CardManager.instance.reRenderAllCards, CardManager.instance);\n        }\n\n        return CardManager.instance;\n\n    },\n    exportCards: function() {\n        return btoa(JSON.stringify(this.cards));\n    },\n    importCards: function(data) {\n        localStorage.setItem('cards', atob(data));\n        this.loadCards();\n        this.renderAllCards();\n    },\n    selectCard: function(cardId) {\n        if (this.selectedCard !== undefined) {\n            this.selectedCard.node.classList.remove('selected');\n        }\n        this.selectedCard = this.cards[cardId];\n\n        this.selectedCard.node.classList.add('selected');\n\n        this.persistSelectedCard();\n        document.activeElement.blur();\n    },\n    nextCard: function() {\n        let it = +this.selectedCard.id + 1;\n\n        while (it !== +this.selectedCard.id) {\n            if (this.cards[it] !== undefined && this.cards[it].isDeleted !== true) {\n                break;\n            }\n            if (++it >= this.cards.length) {\n                it = 0;\n            }\n        }\n\n        this.selectCard(it);\n    },\n    previousCard: function() {\n        let it = +this.selectedCard.id - 1;\n\n        while (it !== +this.selectedCard.id) {\n            if (this.cards[it] !== undefined) {\n                break;\n            }\n            if (--it <= 0) {\n                it = this.cards.length;\n            }\n        }\n\n        this.selectCard(it);\n    },\n    persistSelectedCard: function() {\n        if (this.selectedCard && this.selectedCard.id > -1) {\n            localStorage.setItem('selectedCard', this.selectedCard.id);\n        }\n    },\n    loadSelectedCard: function() {\n        let selectedCardId = +localStorage.getItem('selectedCard');\n\n        if (selectedCardId !== undefined && selectedCardId > -1) {\n            this.selectedCard = this.cards[selectedCardId];\n        }\n    },\n    deleteCard: function(card) {\n        this.deletedCards.push(card);\n\n        card.delete();\n    },\n    undeleteLastCard: function() {\n        if (this.deletedCards.length === 0) {\n            return;\n        }\n\n        this.deletedCards.splice(this.deletedCards.length -1)[0].undelete();\n\n        this.saveCards();\n    }\n};\n\nmodule.exports = CardManager;","let cardManager = require('./models/CardManager').getInstance();\n\nfunction createDiv(text, className) {\n    let div = document.createElement('div');\n    div.innerHTML = text;\n    div.style.float = \"right\";\n    div.style.cursor = \"pointer\";\n    div.style.width = \"auto\";\n    div.style.textAlign = \"center\";\n    div.style.margin = \"0 3px\";\n\n    if (className !== undefined) {\n        div.className = className;\n    }\n\n    return div;\n}\n\nfunction copySelectionText() {\n    let copysuccess; // let to check whether execCommand successfully executed\n    try {\n        copysuccess = document.execCommand(\"copy\"); // run command to copy selected text to clipboard\n    } catch (e) {\n        copysuccess = false\n    }\n    return copysuccess\n}\n\nfunction selectText(element) {\n    let doc = document\n        , text = element\n        , range, selection\n    ;\n    if (doc.body.createTextRange) {\n        range = document.body.createTextRange();\n        range.moveToElementText(text);\n        range.select();\n    } else if (window.getSelection) {\n        selection = window.getSelection();\n        range = document.createRange();\n        range.selectNodeContents(text);\n        selection.removeAllRanges();\n        selection.addRange(range);\n        return selection;\n    }\n}\n\nfunction getParentCardId(context) {\n    if (context.parentElement === null) return;\n    return parseInt(context.parentElement.id.split(\"_\")[1]);\n}\n\nfunction getSomethingByclassName(context, classname) {\n    let res = context.getElementsByClassName(classname);\n\n    if (res.length === 0) {\n        res = context.parentElement.getElementsByClassName(classname);\n    }\n\n    return res;\n}\n\nfunction changeDepth(cardId, increment) {\n    let depth = cardManager.cards[cardId].depth + increment;\n\n    this.style.zIndex = depth;\n    cardManager.cards[cardId].depth = depth;\n\n    let elem = getSomethingByclassName(this, 'depth');\n    elem[0].innerHTML = depth;\n}\n\nfunction setDepth(cardId, depth) {\n    this.style.zIndex = depth;\n    cardManager.cards[cardId].depth = depth;\n\n    let elem = getSomethingByclassName(this, 'depth');\n    elem[0].innerHTML = depth;\n}\n\nfunction getCardHTMLById(mainContainer, id) {\n    return mainContainer.getElementById('todo_' + id);\n}\n\n// PROTOTYPES\n\n/*\n * Returns the size of an array\n */\nArray.prototype.size = function() {\n    return this.filter(function(a) {\n        return a !== undefined;\n    }).length\n};\n\n/*\n * Returns the size of an object\n */\nObject.size = function(obj) {\n    let size = 0, key = \"\";\n\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\nmodule.exports = {\n    createDiv: createDiv,\n    copySelectionText: copySelectionText,\n    selectText: selectText,\n    getParentCardId: getParentCardId,\n    changeDepth: changeDepth,\n    setDepth: setDepth,\n    getCardHTMLById: getCardHTMLById\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}