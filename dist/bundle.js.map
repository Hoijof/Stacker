{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/murmurhash-js/index.js","node_modules/murmurhash-js/murmurhash2_gc.js","node_modules/murmurhash-js/murmurhash3_gc.js","node_modules/random-material-color/dist/randomColor.js","src/js/config.js","src/js/lib/keyHandler.js","src/js/lib/pubsub.js","src/js/main.js","src/js/models/Card.js","src/js/models/CardManager.js","src/js/prototypes.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtnfile":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var murmur3 = require(\"./murmurhash3_gc.js\")\nvar murmur2 = require(\"./murmurhash2_gc.js\")\n\nmodule.exports = murmur3\nmodule.exports.murmur3 = murmur3\nmodule.exports.murmur2 = murmur2\n","/**\n * JS Implementation of MurmurHash2\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n */\n\nfunction murmurhash2_32_gc(str, seed) {\n  var\n    l = str.length,\n    h = seed ^ l,\n    i = 0,\n    k;\n  \n  while (l >= 4) {\n  \tk = \n  \t  ((str.charCodeAt(i) & 0xff)) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 8) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 16) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 24);\n    \n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    k ^= k >>> 24;\n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n\th = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n    l -= 4;\n    ++i;\n  }\n  \n  switch (l) {\n  case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n  case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n  case 1: h ^= (str.charCodeAt(i) & 0xff);\n          h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  }\n\n  h ^= h >>> 13;\n  h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  h ^= h >>> 15;\n\n  return h >>> 0;\n}\n\nif(typeof module !== undefined) {\n  module.exports = murmurhash2_32_gc\n}\n","/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash \n */\n\nfunction murmurhash3_32_gc(key, seed) {\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\t\n\tremainder = key.length & 3; // key.length % 4\n\tbytes = key.length - remainder;\n\th1 = seed;\n\tc1 = 0xcc9e2d51;\n\tc2 = 0x1b873593;\n\ti = 0;\n\t\n\twhile (i < bytes) {\n\t  \tk1 = \n\t  \t  ((key.charCodeAt(i) & 0xff)) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\t\t\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\t\n\tk1 = 0;\n\t\n\tswitch (remainder) {\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\t\t\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\t\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nif(typeof module !== \"undefined\") {\n  module.exports = murmurhash3_32_gc\n}","var defaultPalette={50:[\"#FFEBEE\",\"#FCE4EC\",\"#F3E5F5\",\"#EDE7F6\",\"#E8EAF6\",\"#E3F2FD\",\"#E1F5FE\",\"#E0F7FA\",\"#E0F2F1\",\"#E8F5E9\",\"#F1F8E9\",\"#F9FBE7\",\"#FFFDE7\",\"#FFF8E1\",\"#FFF3E0\",\"#FBE9E7\",\"#EFEBE9\",\"#FAFAFA\",\"#ECEFF1\"],100:[\"#FFCDD2\",\"#F8BBD0\",\"#E1BEE7\",\"#D1C4E9\",\"#C5CAE9\",\"#BBDEFB\",\"#B3E5FC\",\"#B2EBF2\",\"#B2DFDB\",\"#C8E6C9\",\"#DCEDC8\",\"#F0F4C3\",\"#FFF9C4\",\"#FFECB3\",\"#FFE0B2\",\"#FFCCBC\",\"#D7CCC8\",\"#F5F5F5\",\"#CFD8DC\"],200:[\"#EF9A9A\",\"#F48FB1\",\"#CE93D8\",\"#B39DDB\",\"#9FA8DA\",\"#90CAF9\",\"#81D4FA\",\"#80DEEA\",\"#80CBC4\",\"#A5D6A7\",\"#C5E1A5\",\"#E6EE9C\",\"#FFF59D\",\"#FFE082\",\"#FFCC80\",\"#FFAB91\",\"#BCAAA4\",\"#EEEEEE\",\"#B0BEC5\"],300:[\"#E57373\",\"#F06292\",\"#BA68C8\",\"#9575CD\",\"#7986CB\",\"#64B5F6\",\"#4FC3F7\",\"#4DD0E1\",\"#4DB6AC\",\"#81C784\",\"#AED581\",\"#DCE775\",\"#FFF176\",\"#FFD54F\",\"#FFB74D\",\"#FF8A65\",\"#A1887F\",\"#E0E0E0\",\"#90A4AE\"],400:[\"#EF5350\",\"#EC407A\",\"#AB47BC\",\"#7E57C2\",\"#5C6BC0\",\"#42A5F5\",\"#29B6F6\",\"#26C6DA\",\"#26A69A\",\"#66BB6A\",\"#9CCC65\",\"#D4E157\",\"#FFEE58\",\"#FFCA28\",\"#FFA726\",\"#FF7043\",\"#8D6E63\",\"#BDBDBD\",\"#78909C\"],500:[\"#F44336\",\"#E91E63\",\"#9C27B0\",\"#673AB7\",\"#3F51B5\",\"#2196F3\",\"#03A9F4\",\"#00BCD4\",\"#009688\",\"#4CAF50\",\"#8BC34A\",\"#CDDC39\",\"#FFEB3B\",\"#FFC107\",\"#FF9800\",\"#FF5722\",\"#795548\",\"#9E9E9E\",\"#607D8B\"],600:[\"#E53935\",\"#D81B60\",\"#8E24AA\",\"#5E35B1\",\"#3949AB\",\"#1E88E5\",\"#039BE5\",\"#00ACC1\",\"#00897B\",\"#43A047\",\"#7CB342\",\"#C0CA33\",\"#FDD835\",\"#FFB300\",\"#FB8C00\",\"#F4511E\",\"#6D4C41\",\"#757575\",\"#546E7A\"],700:[\"#D32F2F\",\"#C2185B\",\"#7B1FA2\",\"#512DA8\",\"#303F9F\",\"#1976D2\",\"#0288D1\",\"#0097A7\",\"#00796B\",\"#388E3C\",\"#689F38\",\"#AFB42B\",\"#FBC02D\",\"#FFA000\",\"#F57C00\",\"#E64A19\",\"#5D4037\",\"#616161\",\"#455A64\"],800:[\"#C62828\",\"#AD1457\",\"#6A1B9A\",\"#4527A0\",\"#283593\",\"#1565C0\",\"#0277BD\",\"#00838F\",\"#00695C\",\"#2E7D32\",\"#558B2F\",\"#9E9D24\",\"#F9A825\",\"#FF8F00\",\"#EF6C00\",\"#D84315\",\"#4E342E\",\"#424242\",\"#37474F\"],900:[\"#B71C1C\",\"#880E4F\",\"#4A148C\",\"#311B92\",\"#1A237E\",\"#0D47A1\",\"#01579B\",\"#006064\",\"#004D40\",\"#1B5E20\",\"#33691E\",\"#827717\",\"#F57F17\",\"#FF6F00\",\"#E65100\",\"#BF360C\",\"#3E2723\",\"#212121\",\"#263238\"],A100:[\"#FF8A80\",\"#FF80AB\",\"#EA80FC\",\"#B388FF\",\"#8C9EFF\",\"#82B1FF\",\"#80D8FF\",\"#84FFFF\",\"#A7FFEB\",\"#B9F6CA\",\"#CCFF90\",\"#F4FF81\",\"#FFFF8D\",\"#FFE57F\",\"#FFD180\",\"#FF9E80\"],A200:[\"#FF5252\",\"#FF4081\",\"#E040FB\",\"#7C4DFF\",\"#536DFE\",\"#448AFF\",\"#40C4FF\",\"#18FFFF\",\"#64FFDA\",\"#69F0AE\",\"#B2FF59\",\"#EEFF41\",\"#FFFF00\",\"#FFD740\",\"#FFAB40\",\"#FF6E40\"],A400:[\"#FF1744\",\"#F50057\",\"#D500F9\",\"#651FFF\",\"#3D5AFE\",\"#2979FF\",\"#00B0FF\",\"#00E5FF\",\"#1DE9B6\",\"#00E676\",\"#76FF03\",\"#C6FF00\",\"#FFEA00\",\"#FFC400\",\"#FF9100\",\"#FF3D00\"],A700:[\"#D50000\",\"#C51162\",\"#AA00FF\",\"#6200EA\",\"#304FFE\",\"#2962FF\",\"#0091EA\",\"#00B8D4\",\"#00BFA5\",\"#00C853\",\"#64DD17\",\"#AEEA00\",\"#FFD600\",\"#FFAB00\",\"#FF6D00\",\"#DD2C00\"]},murmur=require(\"murmurhash-js\");module.exports=function(){var F=[],E={shades:[\"500\"],palette:defaultPalette,text:null,ignoreColors:[]},C=function(C){C||(C=E),C.palette||(C.palette=defaultPalette),C.shades||(C.shades=[\"500\"]);for(var B,D=F.length,t=0;D>t;t++)if(C.text&&F[t].text===C.text)return F[t].color;return B=A(C),C.text&&F.push({text:C.text,color:B}),B},A=function(F){var E=F.shades[B(F.shades.length)],C=\"\";for(var A in F.palette)F.palette.hasOwnProperty(A)&&A===E&&(C=F.text?F.palette[A][D(F.text,F.palette[A].length)]:F.palette[A][B(F.palette[A].length)]);return C},B=function(F){return Math.floor(Math.random()*F)},D=function(F,E){var C=murmur.murmur3(F)/1e10;return.1>C&&(C=10*C),Math.floor(C*E)};return{getColor:C}}();","module.exports = {\r\n  SAVE_CARDS: 'SAVE_CARDS',\r\n  SELECT_CARD: 'SELECT_CARD',\r\n  RERENDER: 'RERENDER',\r\n  LESS_PRISTINE: 'LESS_PRISTINE',\r\n  ASCII: {\r\n    ESCAPE_KEY: 27,\r\n    TAB_KEY: 9,\r\n    C_KEY: 67,\r\n    D_KEY: 68,\r\n    E_KEY: 69,\r\n    PLUS_KEY: 187,\r\n    MINUS_KEY: 189,\r\n    DOT_KEY: 190,\r\n    A_KEY: 65,\r\n    I_KEY: 73,\r\n    R_KEY: 82,\r\n    Z_KEY: 90,\r\n    CMD_KEY: 91,\r\n    KEYS_ARRAY: [27, 9, 67, 68, 69, 187, 189, 190, 65, 73, 82, 90, 91]\r\n  },\r\n  DEFAULT_CONTENT: 'W3siaWQiOjAsInRpdGxlIjoiMSIsImRlc2NyaXB0aW9uIjoiVXNlIHRhYiBhbmQgc2hpZnQgdGFiIHRvIGNpcmNsZSBiZXR3ZWVuIGNhcmRzIDpEXG5cbkRyYWdnaW5nIG9yIGNsaWNraW5nIHRoZW0gd2lsbCBhbHNvIG1hcmsgdGhlbSBhcyBzZWxlY3RlZCIsImRlcHRoIjo1LCJ4IjoxNjksInkiOjc5LCJjb2xvciI6IiNBNUQ2QTciLCJzZWxlY3RlZCI6dHJ1ZSwiaXNBcmNoaXZlZCI6ZmFsc2UsImlzRGVsZXRlZCI6ZmFsc2UsImNyZWF0ZWRBdCI6MTUwNzY0Njc1ODE4NiwiYXJjaGl2ZWRBdCI6bnVsbCwibm9kZSI6eyJqUXVlcnkxNzIwNDI0NzE4MTg1NzEyOTY0MDUiOjR9fSx7ImlkIjoxLCJ0aXRsZSI6IjIiLCJkZXNjcmlwdGlvbiI6Ik9uIGEgbWFya2VkIGNhcmQgdXNlIGN0cmwgKzpcbidjJyB0byBjb3B5IHRoZSBjb250ZW50XG4nZCcgdG8gZGVsZXRlIGl0XG4nZScgdG8gZWRpdCBpdFxuJ2EnIHRvIGFyY2hpdmUgb3IgZGVhcmNoaXZlIGRlIGNhcmQiLCJkZXB0aCI6NSwieCI6MzgyLCJ5Ijo3NiwiY29sb3IiOiIjQUVENTgxIiwic2VsZWN0ZWQiOmZhbHNlLCJpc0FyY2hpdmVkIjpmYWxzZSwiaXNEZWxldGVkIjpmYWxzZSwiY3JlYXRlZEF0IjoxNTA3NjQ2NzcxNzQwLCJhcmNoaXZlZEF0IjpudWxsLCJub2RlIjp7ImpRdWVyeTE3MjA0MjQ3MTgxODU3MTI5NjQwNSI6OH19LHsiaWQiOjIsInRpdGxlIjoiZW50ZXJzIiwiZGVzY3JpcHRpb24iOiJXaGlsZSBlZGl0aW5nIHVzZSBzaGlmdCArIGVudGVyIHRvIFxuaW5zZXJ0XG5hXG5saW5lXG5icmVha1xuOkQiLCJkZXB0aCI6NSwieCI6MTU5LCJ5IjozMTIsImNvbG9yIjoiI0ZGQjc0RCIsInNlbGVjdGVkIjpmYWxzZSwiaXNBcmNoaXZlZCI6ZmFsc2UsImlzRGVsZXRlZCI6ZmFsc2UsImNyZWF0ZWRBdCI6MTUwNzY0Njc5MjI5NywiYXJjaGl2ZWRBdCI6bnVsbCwibm9kZSI6eyJqUXVlcnkxNzIwNDI0NzE4MTg1NzEyOTY0MDUiOjZ9fSx7ImlkIjozLCJ0aXRsZSI6IkdlbmVyaWMiLCJkZXNjcmlwdGlvbiI6IllvdSBjYW4gYWxzbyB1c2UgZ2VuZXJpYyBjb21tYW5kcyBzdWNoIGFzIGN0cmwrXG4naScgdG8gY3JlYXRlIGEgY2FyZFxuJ3onIHRvIHJldml2ZSB0aGUgbGFzdCBkZWxldGVkIGNhcmQiLCJkZXB0aCI6NSwieCI6NDQxLCJ5IjoyOTYsImNvbG9yIjoiI0ZGRTA4MiIsInNlbGVjdGVkIjpmYWxzZSwiaXNBcmNoaXZlZCI6ZmFsc2UsImlzRGVsZXRlZCI6ZmFsc2UsImNyZWF0ZWRBdCI6MTUwNzY0ODYzODM4NiwiYXJjaGl2ZWRBdCI6bnVsbCwiaXNQcmlzdGluZSI6ZmFsc2UsIm5vZGUiOnsialF1ZXJ5MTcyMDQyNDcxODE4NTcxMjk2NDA1IjoxMH19XQ',\r\n  VERSION: '0.5.0'\r\n};\r\n","const CONFIG = require('../config');\r\n\r\nlet cardManager;\r\nlet Card = require('../models/Card');\r\n\r\nlet mainContainer,\r\n  editContainer,\r\n  editInput,\r\n  titleInput,\r\n  importContainer,\r\n  importInput,\r\n  exportContainer,\r\n  exportContent,\r\n  importButton;\r\n\r\nfunction init (options) {\r\n  cardManager = options.cardManager;\r\n  bindings();\r\n}\r\n\r\nfunction bindings () {\r\n  mainContainer = $('#mainContainer');\r\n  editContainer = document.getElementById('editContainer');\r\n  editInput = editContainer.getElementsByClassName('textarea')[0];\r\n  titleInput = editContainer.getElementsByClassName('input')[0];\r\n  importContainer = document.getElementById('importContainer');\r\n  importInput = importContainer.getElementsByClassName('input')[0];\r\n  importButton = importContainer.getElementsByClassName('button')[0];\r\n  exportContainer = document.getElementById('exportContainer');\r\n  exportContent = exportContainer.getElementsByTagName('div')[0];\r\n\r\n  window.addEventListener('keyup', keyHandlerUp, false);\r\n  window.addEventListener('keydown', keyHandlerDown, false);\r\n  editInput.addEventListener('keydown', editInputKeyEvent);\r\n  titleInput.addEventListener('keydown', editInputKeyEvent);\r\n  editContainer.addEventListener('click', hideEditContainer);\r\n  editInput.addEventListener('click', stopPropagation);\r\n  titleInput.addEventListener('click', stopPropagation);\r\n  /*\r\n     On double click edit the card\r\n     */\r\n  mainContainer.on('dblclick', 'div', doubleClickHandler);\r\n  /*\r\n     On click perform the card\r\n     */\r\n  mainContainer.on('click', 'div', cardClickEvents);\r\n  mainContainer.on('click', 'div > div', cardMenuEvents);\r\n  document.getElementById('export').addEventListener('click', exportCards);\r\n  document.getElementById('import').addEventListener('click', showImporter);\r\n  importButton.addEventListener('click', loadImportCardsCode);\r\n  importContainer.addEventListener('click', hideImportContainer);\r\n  importInput.addEventListener('keydown', importInputKeyEvent);\r\n  importInput.addEventListener('click', stopPropagation);\r\n  exportContainer.addEventListener('click', hideExportContainer);\r\n  exportContent.addEventListener('click', stopPropagation);\r\n}\r\n\r\nfunction keyHandlerDown (e) {\r\n  if (e.keyCode === CONFIG.ASCII.TAB_KEY) {\r\n    document.activeElement.blur();\r\n    if (e.shiftKey) {\r\n      cardManager.previousCard();\r\n    } else {\r\n      cardManager.nextCard();\r\n    }\r\n    if (e.preventDefault) {\r\n      e.preventDefault();\r\n    }\r\n  } else if (e.keyCode === CONFIG.ASCII.CMD_KEY) {\r\n    window.cmdPress = true;\r\n  }\r\n}\r\n\r\nfunction keyHandlerUp (e) {\r\n  console.log(e.keyCode);\r\n  console.log(document.activeElement);\r\n  if (document.activeElement !== document.body || CONFIG.ASCII.KEYS_ARRAY.indexOf(e.keyCode) === -1) {\r\n    return;\r\n  }\r\n  e.stopPropagation();\r\n  e.preventDefault();\r\n\r\n  switch (e.keyCode) {\r\n    case CONFIG.ASCII.C_KEY:\r\n      let elem = cardManager.selectedCard.node;\r\n      let selection;\r\n\r\n      selection = selectText(elem.getElementsByClassName('cardText')[0]);\r\n      copySelectionText();\r\n      selection.empty();\r\n\r\n      break;\r\n    case CONFIG.ASCII.D_KEY:\r\n      let card = cardManager.selectedCard;\r\n      cardManager.nextCard();\r\n      cardManager.deleteCard(card);\r\n      cardManager.saveCards();\r\n      break;\r\n    case CONFIG.ASCII.E_KEY:\r\n      doubleClickHandler.apply(cardManager.selectedCard.node);\r\n\r\n      break;\r\n    case CONFIG.ASCII.A_KEY:\r\n      cardManager.selectedCard.toggleArchived();\r\n      break;\r\n    case CONFIG.ASCII.I_KEY:\r\n      // input.focus();\r\n      createCard();\r\n      break;\r\n    case CONFIG.ASCII.PLUS_KEY:\r\n      changeDepth.apply(cardManager.selectedCard.node, [cardManager.selectedCard.id, 1]);\r\n      break;\r\n    case CONFIG.ASCII.MINUS_KEY:\r\n      changeDepth.apply(cardManager.selectedCard.node, [cardManager.selectedCard.id, -1]);\r\n      break;\r\n    case CONFIG.ASCII.DOT_KEY:\r\n      setDepth.apply(cardManager.selectedCard.node, [cardManager.selectedCard.id, 5]);\r\n      break;\r\n    case CONFIG.ASCII.R_KEY:\r\n      cardManager.selectedCard.color = cardManager.selectedCard.getBackgroundColor();\r\n      cardManager.selectedCard.derender();\r\n      cardManager.selectedCard.render();\r\n\r\n      cardManager.saveCards();\r\n      break;\r\n    case CONFIG.ASCII.Z_KEY:\r\n      cardManager.undeleteLastCard();\r\n      break;\r\n    case CONFIG.ASCII.CMD_KEY:\r\n      window.cmdPress = false;\r\n  }\r\n}\r\n\r\nfunction hideExportContainer () {\r\n  exportContainer.style.display = 'none';\r\n}\r\n\r\nfunction hideEditContainer () {\r\n  editContainer.style.display = 'none';\r\n}\r\n\r\nfunction hideImportContainer () {\r\n  importContainer.style.display = 'none';\r\n}\r\n\r\nfunction stopPropagation (e) {\r\n  e.stopPropagation();\r\n}\r\n\r\nfunction editInputKeyEvent (event) {\r\n  event.stopPropagation();\r\n  let card;\r\n  if (event.keyCode === 13 && event.shiftKey) return;\r\n  if (event.keyCode === 13) {\r\n    card = cardManager.cards[editContainer.cardId];\r\n    card.title = titleInput.value;\r\n    card.description = editInput.value;\r\n    card.derender();\r\n    card.render();\r\n    this.value = '';\r\n    cardManager.saveCards();\r\n    hideEditContainer();\r\n  } else if (event.keyCode === 27) {\r\n    hideEditContainer();\r\n  }\r\n}\r\n\r\nfunction importInputKeyEvent (event) {\r\n  if (event.keyCode === 27) {\r\n    hideImportContainer();\r\n  }\r\n}\r\n\r\nfunction doubleClickHandler () {\r\n  let cardId;\r\n  let card;\r\n\r\n  if (this.id === '') {\r\n    cardId = parseInt(this.parentElement.id.split('_')[1]);\r\n  } else {\r\n    cardId = parseInt(this.id.split('_')[1]);\r\n  }\r\n\r\n  card = cardManager.cards[cardId];\r\n\r\n  titleInput.value = card.title;\r\n  editInput.value = card.description;\r\n  titleInput.style.top = card.y;\r\n  titleInput.style.left = card.x;\r\n  editContainer.cardId = cardId;\r\n  editContainer.style.display = 'block';\r\n  editInput.style.top = card.y + 23;\r\n  editInput.style.left = card.x;\r\n  titleInput.focus();\r\n}\r\n\r\nfunction cardClickEvents (event) {\r\n  let cardId;\r\n  let card;\r\n\r\n  if (this.id === '') {\r\n    cardId = parseInt(this.parentElement.id.split('_')[1]);\r\n  } else {\r\n    cardId = parseInt(this.id.split('_')[1]);\r\n  }\r\n\r\n  card = cardManager.cards[cardId];\r\n\r\n  if (card === undefined) return;\r\n\r\n  cardManager.selectCard(card.id);\r\n\r\n  if (event.ctrlKey) {\r\n  }\r\n  if (event.altKey) {\r\n    this.querySelector('.copy').click();\r\n  }\r\n  if (event.shiftKey) {\r\n\r\n  }\r\n}\r\n\r\nfunction cardMenuEvents () {\r\n  let option = $(this).html();\r\n  let selection;\r\n  let cardId = getParentCardId(this);\r\n\r\n  switch (option) {\r\n    case '+':\r\n      changeDepth.apply(this, [cardId, 1]);\r\n      break;\r\n    case '-':\r\n      changeDepth.apply(this, [cardId, -1]);\r\n      break;\r\n    case 'C':\r\n      selection = selectText(this.parentElement.getElementsByClassName('cardText')[0]);\r\n      copySelectionText();\r\n      selection.empty();\r\n      break;\r\n    case 'x':\r\n      cardManager.deleteCard(cardManager.cards[cardId]);\r\n      break;\r\n    case 'V':\r\n    case 'O':\r\n      cardManager.cards[cardId].toggleArchived();\r\n  }\r\n  cardManager.saveCards();\r\n}\r\n\r\nfunction exportCards () {\r\n  exportContainer.style.display = 'block';\r\n  exportContent.innerHTML = cardManager.exportCards();\r\n  selection = selectText(exportContent);\r\n  copySelectionText();\r\n  selection.empty();\r\n}\r\n\r\nfunction loadImportCardsCode () {\r\n  let data = importInput.value;\r\n  cardManager.importCards(data);\r\n  importContainer.style.display = 'none';\r\n}\r\n\r\nfunction showImporter () {\r\n  importContainer.style.display = 'block';\r\n  importInput.focus();\r\n}\r\n\r\nfunction createCard () {\r\n  const card = cardManager.addCard(Object.create(Card, {}).init(''));\r\n  card.render();\r\n  cardManager.selectCard(card.id);\r\n\r\n  // and now we autoedit :D\r\n  doubleClickHandler.apply(card.node);\r\n}\r\n\r\nmodule.exports = {\r\n  init: init\r\n};\r\n","\r\nvar subs = {};\r\n\r\nfunction pub (name, params) {\r\n  subs[name].forEach(function (elem) {\r\n    elem.callback.apply(elem.context, params);\r\n  });\r\n}\r\n\r\nfunction sub (name, callback, context) {\r\n  if (subs[name] === undefined) {\r\n    subs[name] = [];\r\n  }\r\n\r\n  subs[name].push({\r\n    callback: callback,\r\n    context: context\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  pub: pub,\r\n  sub: sub\r\n};\r\n","window.CONFIG = require('./config.js');\r\n\r\nlet keyHandler = require('./lib/keyHandler');\r\nlet cardManager = require('./models/CardManager').getInstance();\r\nlet pubsub = require('./lib/pubsub');\r\n\r\nwindow.cm = {\r\n  cardManager: cardManager\r\n};\r\n\r\nObject.assign(window, require('./prototypes'));\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  'strict mode';\r\n\r\n  keyHandler.init({\r\n    cardManager: cardManager\r\n  });\r\n    \r\n  cardManager.loadCards();\r\n  cardManager.renderAllCards();\r\n});\r\n","let pubsub = require('../lib/pubsub');\r\nlet randomMC = require('random-material-color');\r\n\r\nlet Card = {\r\n  init: function (title, description, pristine) {\r\n    this.id = -1;\r\n    this.title = title;\r\n    this.description = description;\r\n    this.depth = 5;\r\n    this.x = 100;\r\n    this.y = 100;\r\n    this.color = this.getBackgroundColor();\r\n    this.selected = false;\r\n    this.isArchived = false;\r\n    this.isDeleted = false;\r\n    this.createdAt = +new Date();\r\n    this.archivedAt = null;\r\n    this.isPristine = true;\r\n\r\n    return this;\r\n  },\r\n  render: function (always = false) {\r\n    if (this.isDeleted === true && always === false) {\r\n      return;\r\n    }\r\n\r\n    let node = document.createElement('div');\r\n    let title = document.createElement('div');\r\n    let text = document.createElement('div');\r\n    let link = this.findLink();\r\n    let that = this;\r\n\r\n    if (this.title) {\r\n      if (link) {\r\n        title.innerHTML = `<a target=\"_blank\" href=\"${link}\">${this.title}</a>`;\r\n      } else {\r\n        title.innerHTML = this.title;\r\n      }\r\n    } else {\r\n      if (link) {\r\n        title.innerHTML = `<a target=\"_blank\" href=\"${link}\">Link!</a>`;\r\n      }\r\n    }\r\n\r\n    if (this.description) {\r\n      text.innerHTML = this.description.replace(/\\r?\\n/g, '<br/>');\r\n    }\r\n\r\n    title.className = 'cardTitle';\r\n    text.className = 'cardText';\r\n\r\n    node.id = 'todo_' + this.id;\r\n    node.className = 'card card-1';\r\n    node.style.position = 'fixed';\r\n    node.style.left = this.x;\r\n    node.style.top = this.y;\r\n    node.style.cursor = '-webkit-grab';\r\n    node.style.zIndex = this.depth;\r\n    node.style.backgroundColor = this.color;\r\n\r\n    document.getElementById('mainContainer').appendChild(node);\r\n\r\n    node.appendChild(createDiv('x', 'control remove'));\r\n    // node.appendChild(createDiv('+', 'control up'));\r\n    // node.appendChild(createDiv('-', 'control down'));\r\n    node.appendChild(createDiv('C', 'control copy'));\r\n    node.appendChild(createDiv('depth: ' + this.depth, 'depth'));\r\n    // node.appendChild(createDiv(this.isArchived ? 'V' : 'O', 'isArchived'));\r\n    node.appendChild(createDiv('id: ' + this.id, 'id'));\r\n\r\n    node.appendChild(title);\r\n    node.appendChild(text);\r\n\r\n    $('#todo_' + this.id).draggable({\r\n      stop: function () {\r\n        let card = $('#todo_' + that.id);\r\n\r\n        if (that.isPristine === true) {\r\n          that.isPristine = false;\r\n\r\n          pubsub.pub(window.CONFIG.LESS_PRISTINE);\r\n        }\r\n\r\n        that.x = +card.css('left').replace('px', '');\r\n        that.y = +card.css('top').replace('px', '');\r\n\r\n        pubsub.pub(window.CONFIG.SELECT_CARD, [that.id]);\r\n        pubsub.pub(window.CONFIG.SAVE_CARDS);\r\n      }\r\n    });\r\n\r\n    this.node = node;\r\n\r\n    if (this.selected === true) {\r\n      node.classList.add('selected');\r\n    }\r\n\r\n    if (this.isArchived) {\r\n      node.classList.add('completed');\r\n    }\r\n\r\n    return this;\r\n  },\r\n  getBackgroundColor: function () {\r\n    return randomMC.getColor({ shades: ['200', '300'] });\r\n  },\r\n  derender: function () {\r\n    let node = document.getElementById('todo_' + this.id);\r\n    document.getElementById('mainContainer').removeChild(node);\r\n\r\n    return this;\r\n  },\r\n  toggleArchived: function () {\r\n    if (this.isArchived === false || this.isArchived === undefined) {\r\n      this.node.classList.remove('notCompleted');\r\n      void this.node.offsetWidth;\r\n      this.node.classList.add('completed');\r\n      this.archivedAt = +new Date();\r\n    } else {\r\n      this.node.classList.remove('completed');\r\n      void this.node.offsetWidth;\r\n      this.node.classList.add('notCompleted');\r\n      this.archivedAt = null;\r\n    }\r\n\r\n    this.isArchived = !this.isArchived;\r\n\r\n    pubsub.pub(window.CONFIG.SAVE_CARDS);\r\n  },\r\n  delete: function () {\r\n    this.isDeleted = true;\r\n\r\n    this.derender();\r\n  },\r\n  undelete: function () {\r\n    this.isDeleted = false;\r\n\r\n    this.render();\r\n\r\n    return this;\r\n  },\r\n  findLink: function () {\r\n    const regex = /(https?:\\/\\/[^\\s]+|www.[^\\s]+)/;\r\n    let link = regex.exec(this.title);\r\n\r\n    if (link == null) {\r\n      link = regex.exec(this.description);\r\n    }\r\n\r\n    if (link) {\r\n      return link[0];\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = Card;\r\n","const Card = require('./Card');\r\nconst pubsub = require('../lib/pubsub');\r\nconst CONFIG = require('../config');\r\n\r\nlet CardManager = {\r\n  init: function () {\r\n    this.cards = [];\r\n    this.selectedCard = { id: -1 };\r\n    this.deletedCards = [];\r\n    this.pristine = 0;\r\n\r\n    return this;\r\n  },\r\n  addCard: function (card) {\r\n    this.cards.push(card);\r\n    card.id = this.cards.length - 1;\r\n\r\n    card.x = card.x + this.pristine * 10;\r\n    card.y = card.y + this.pristine * 10;\r\n\r\n    this.pristine++;\r\n\r\n    return card;\r\n  },\r\n  removeCard: function (id) {\r\n    this.cards[id].derender();\r\n    this.cards[id] = undefined;\r\n\r\n    return this;\r\n  },\r\n  redrawCard: function (cardId, x, y) {\r\n    let card = this.cards[cardId];\r\n    card.x = x;\r\n    card.y = y;\r\n\r\n    card.derender();\r\n    card.render();\r\n\r\n    return this;\r\n  },\r\n  saveCards: function () {\r\n    if (typeof (Storage) !== 'undefined') {\r\n      window.localStorage.setItem('cards', JSON.stringify(this.cards));\r\n    } else {\r\n      console.log('you don\\'t have local storage :(');\r\n    }\r\n\r\n    this.persistSelectedCard();\r\n    this.persistDeletedCards();\r\n\r\n    return this;\r\n  },\r\n  loadCards: function () {\r\n    this.cards = JSON.parse(window.localStorage.getItem('cards'));\r\n\r\n    if (this.cards === null) {\r\n      this.cards = JSON.parse(window.atob(CONFIG.DEFAULT_CONTENT));\r\n    }\r\n\r\n    this.clearArray();\r\n\r\n    this.loadSelectedCard();\r\n    this.loadDeletedCards();\r\n\r\n    document.activeElement.blur();\r\n\r\n    return this;\r\n  },\r\n  clearArray: function () {\r\n    let i;\r\n\r\n    this.cards = this.cards.filter(function (elem) {\r\n      return elem !== undefined && elem !== null;\r\n    });\r\n    for (i in this.cards) {\r\n      if (this.cards.hasOwnProperty(i)) {\r\n        this.cards[+i].id = +i;\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n  reRenderAllCards: function () {\r\n    this.cards.forEach((card) => {\r\n      card.derender();\r\n    });\r\n    this.renderAllCards();\r\n  },\r\n  renderAllCards: function () {\r\n    this.cards.forEach((card) => {\r\n      card.selected = this.selectedCard && (this.selectedCard.id === card.id);\r\n      Object.setPrototypeOf(card, Card);\r\n      card.render();\r\n    }\r\n    );\r\n\r\n    return this;\r\n  },\r\n  getInstance: function () {\r\n    if (CardManager.instance === undefined) {\r\n      CardManager.instance = Object.create(CardManager, {});\r\n      CardManager.instance.init();\r\n      pubsub.sub(window.CONFIG.SAVE_CARDS, CardManager.instance.saveCards, CardManager.instance);\r\n      pubsub.sub(window.CONFIG.SELECT_CARD, CardManager.instance.selectCard, CardManager.instance);\r\n      pubsub.sub(window.CONFIG.RERENDER, CardManager.instance.reRenderAllCards, CardManager.instance);\r\n      pubsub.sub(window.CONFIG.LESS_PRISTINE, CardManager.instance.lessPristine, CardManager.instance);\r\n    }\r\n\r\n    return CardManager.instance;\r\n  },\r\n  lessPristine: function () {\r\n    this.pristine--;\r\n  },\r\n  exportCards: function () {\r\n    return window.btoa(JSON.stringify(this.cards));\r\n  },\r\n  importCards: function (data) {\r\n    window.localStorage.setItem('cards', window.atob(data));\r\n    this.loadCards();\r\n    this.renderAllCards();\r\n  },\r\n  selectCard: function (cardId) {\r\n    if (this.selectedCard !== undefined && this.selectedCard.node.classList !== undefined) {\r\n      this.selectedCard.node.classList.remove('selected');\r\n    }\r\n    this.selectedCard = this.cards[cardId];\r\n\r\n    this.selectedCard.node.classList.add('selected');\r\n\r\n    this.persistSelectedCard();\r\n    document.activeElement.blur();\r\n  },\r\n  nextCard: function () {\r\n    let it = +this.selectedCard.id + 1;\r\n\r\n    while (it !== +this.selectedCard.id) {\r\n      if (this.cards[it] !== undefined && this.cards[it].isDeleted !== true) {\r\n        break;\r\n      }\r\n      if (++it >= this.cards.length) {\r\n        it = 0;\r\n      }\r\n    }\r\n\r\n    this.selectCard(it);\r\n  },\r\n  previousCard: function () {\r\n    let it = +this.selectedCard.id - 1;\r\n\r\n    while (it !== +this.selectedCard.id) {\r\n      if (this.cards[it] !== undefined) {\r\n        break;\r\n      }\r\n      if (--it <= 0) {\r\n        it = this.cards.length;\r\n      }\r\n    }\r\n\r\n    this.selectCard(it);\r\n  },\r\n  persistSelectedCard: function () {\r\n    if (this.selectedCard && this.selectedCard.id > -1) {\r\n      window.localStorage.setItem('selectedCard', this.selectedCard.id);\r\n    }\r\n  },\r\n  loadSelectedCard: function () {\r\n    let selectedCardId = +window.localStorage.getItem('selectedCard');\r\n\r\n    if (selectedCardId !== undefined && selectedCardId > -1) {\r\n      this.selectedCard = this.cards[selectedCardId];\r\n    }\r\n  },\r\n  persistDeletedCards: function () {\r\n    window.localStorage.setItem('deletedCards', JSON.stringify(this.deletedCards));\r\n  },\r\n  loadDeletedCards: function () {\r\n    this.deletedCards = JSON.parse(window.localStorage.getItem('deletedCards')) || [];\r\n  },\r\n  deleteCard: function (card) {\r\n    this.deletedCards.push(card.id);\r\n\r\n    card.delete();\r\n  },\r\n  undeleteLastCard: function () {\r\n    if (this.deletedCards.length === 0) {\r\n      return;\r\n    }\r\n\r\n    this.selectCard(this.cards[this.deletedCards.splice(this.deletedCards.length - 1)].undelete().id);\r\n\r\n    this.saveCards();\r\n  }\r\n};\r\n\r\nmodule.exports = CardManager;\r\n","let cardManager = require('./models/CardManager').getInstance();\r\n\r\nfunction createDiv (text, className) {\r\n  let div = document.createElement('div');\r\n  div.innerHTML = text;\r\n  div.style.float = 'right';\r\n  div.style.cursor = 'pointer';\r\n  div.style.width = 'auto';\r\n  div.style.textAlign = 'center';\r\n  div.style.margin = '0 3px';\r\n\r\n  if (className !== undefined) {\r\n    div.className = className;\r\n  }\r\n\r\n  return div;\r\n}\r\n\r\nfunction copySelectionText () {\r\n  let copysuccess; // let to check whether execCommand successfully executed\r\n  try {\r\n    copysuccess = document.execCommand('copy'); // run command to copy selected text to clipboard\r\n  } catch (e) {\r\n    copysuccess = false;\r\n  }\r\n  return copysuccess;\r\n}\r\n\r\nfunction selectText (element) {\r\n  let doc = document;\r\n  let text = element;\r\n  let range, selection\r\n    ;\r\n  if (doc.body.createTextRange) {\r\n    range = document.body.createTextRange();\r\n    range.moveToElementText(text);\r\n    range.select();\r\n  } else if (window.getSelection) {\r\n    selection = window.getSelection();\r\n    range = document.createRange();\r\n    range.selectNodeContents(text);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    return selection;\r\n  }\r\n}\r\n\r\nfunction getParentCardId (context) {\r\n  if (context.parentElement === null) return;\r\n  return parseInt(context.parentElement.id.split('_')[1]);\r\n}\r\n\r\nfunction getSomethingByclassName (context, classname) {\r\n  let res = context.getElementsByClassName(classname);\r\n\r\n  if (res.length === 0) {\r\n    res = context.parentElement.getElementsByClassName(classname);\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction changeDepth (cardId, increment) {\r\n  let depth = cardManager.cards[cardId].depth + increment;\r\n\r\n  this.style.zIndex = depth;\r\n  cardManager.cards[cardId].depth = depth;\r\n\r\n  let elem = getSomethingByclassName(this, 'depth');\r\n  elem[0].innerHTML = depth;\r\n}\r\n\r\nfunction setDepth (cardId, depth) {\r\n  this.style.zIndex = depth;\r\n  cardManager.cards[cardId].depth = depth;\r\n\r\n  let elem = getSomethingByclassName(this, 'depth');\r\n  elem[0].innerHTML = depth;\r\n}\r\n\r\nfunction getCardHTMLById (mainContainer, id) {\r\n  return mainContainer.getElementById('todo_' + id);\r\n}\r\n\r\n// PROTOTYPES\r\n\r\n/*\r\n * Returns the size of an array\r\n */\r\nArray.prototype.size = function () {\r\n  return this.filter(function (a) {\r\n    return a !== undefined;\r\n  }).length;\r\n};\r\n\r\n/*\r\n * Returns the size of an object\r\n */\r\nObject.size = function (obj) {\r\n  let size = 0;\r\n  let key = '';\r\n\r\n  for (key in obj) {\r\n    if (obj.hasOwnProperty(key)) size++;\r\n  }\r\n  return size;\r\n};\r\n\r\nmodule.exports = {\r\n  createDiv: createDiv,\r\n  copySelectionText: copySelectionText,\r\n  selectText: selectText,\r\n  getParentCardId: getParentCardId,\r\n  changeDepth: changeDepth,\r\n  setDepth: setDepth,\r\n  getCardHTMLById: getCardHTMLById\r\n};\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}